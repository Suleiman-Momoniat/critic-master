{"version":3,"sources":["redux/types.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/list/SearchBar.js","components/list/PostList.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","components/list/DeleteList.js","components/list/Comments.js","components/list/CommentForm.js","components/list/LikeButton.js","components/list/ListDialog.js","components/list/List.js","components/profile/EditDetails.js","images/no-img.png","util/ProfileSkeleton.js","components/profile/Profile.js","util/ListSkeleton.js","pages/home.js","images/icon.png","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","pages/profile.js","App.js","util/theme.js","reportWebVitals.js","index.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","LOADING_USER","MARK_NOTIFICATIONS_READ","SET_ERRORS","LOADING_UI","CLEAR_ERRORS","LOADING_DATA","STOP_LOADING_UI","SET_LISTS","SET_LIST","LIKE_LIST","UNLIKE_LIST","DELETE_LIST","POST_LIST","SUBMIT_COMMENT","initialState","authenticated","loading","credentials","likes","notifications","lists","list","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","listId","filter","like","notification","forEach","read","data","index","findIndex","splice","comments","UI","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","getLists","postList","newList","post","clearErrors","response","likeList","unlikeList","api_key","SearchBar","searchTerm","theMovieFilter","filterAll","isLoading","searchError","searchResults","listBeingCreated","filterBySearchTerm","search","setState","theLocationFilter","newsearchResults","listOfMovies","results","length","doingASearch","event","a","target","name","value","submitSearch","preventDefault","clearInput","pushToList","movie","handleSubmit","ObjectToSubmit","movieList","createdAt","Date","likeCount","commentCount","props","this","classes","itemsInList","map","item","src","backdrop_path","alt","width","onSubmit","htmlFor","onChange","placeholder","id","searchMovieTile","Button","variant","color","submitButton","disabled","CircularProgress","size","progressSpinner","React","Component","connect","withStyles","theme","display","position","float","marginTop","PostList","open","body","listDescription","listTitle","handleOpen","handleClose","handleChange","some","m","prevState","nextProps","MyButton","Dialog","onClose","fullWidth","maxWidth","closeButton","DialogTitle","DialogContent","Input","label","textField","multiline","rows","endAdornment","InputAdornment","left","top","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","notificationId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","Badge","badgeContent","notificationsMarkup","verb","time","creratedAt","fromNow","iconColor","icon","style","marginRight","MenuItem","Typography","component","Link","to","recipient","sender","undefined","Menu","Boolean","onEntered","notificationIds","Navbar","AppBar","Toolbar","rest","render","DeleteList","deleteList","deleteButton","DialogActions","delete","bottom","Comments","Grid","container","comment","userImage","sm","commentImage","commentData","format","invisibleSeparator","visibleSeparator","border","margin","borderBottom","marginBottom","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","textAlign","TextField","error","helperText","button","visibleSeperator","LikeButton","likedList","find","mapActionsToProps","ListDialog","oldPath","newPath","location","pathname","history","pushState","getList","openDialog","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","expandButton","dialogContent","maxHeight","padding","List","handle","listOfImages","baseUrl","push","CardMedia","media","image","imageUrl","poster_path","Card","card","CardHeader","avatar","Avatar","subheader","listItems","CardContent","CardActions","disableSpacing","overflowY","whiteSpace","paddingTop","expandOpen","transform","backgroundColor","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","cardContent","flexDirection","cover","minWidth","date","fullLine","halfLine","Paper","paper","profile","NoImg","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","hidden","href","rel","align","buttons","verticalAlign","cursor","content","Array","from","home","recentListsMarkup","login","userData","email","password","loginUser","form","AppIcon","pageTitle","noValidate","general","customError","progress","spreadThis","signup","newUserData","confirmPassword","signupUser","listIdParam","match","params","listsMarkup","xs","Lists","baseURL","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","fontSize","jwtDecode","exp","now","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0ad0c477.chunk.js","sourcesContent":["//User reducer types\n\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\n\n//UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n\n//Data reducer types\nexport const SET_LISTS = 'SET_LISTS';\nexport const SET_LIST = 'SET_LIST';\nexport const LIKE_LIST = 'LIKE_LIST';\nexport const UNLIKE_LIST = 'UNLIKE_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const POST_LIST = 'POST_LIST';\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\n","import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_LIST,\n    UNLIKE_LIST,\n    MARK_NOTIFICATIONS_READ\n  } from '../types';\n  \n  const initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case LIKE_LIST:\n        return {\n          ...state,\n          likes: [\n            ...state.likes,\n            {\n              userHandle:state.credentials.userHandle,\n              listId: action.payload.listId\n            }\n          ]\n        }\n        case UNLIKE_LIST:\n        return {\n          ...state,\n          likes: state.likes.filter(like => like.listId !== action.payload.listId)\n        }\n        case MARK_NOTIFICATIONS_READ:\n            state.notification.forEach(notification => notification.read = true);\n            return {\n              ...state\n            } \n          \n      default:\n        return state;\n    }\n  }","import { \n    SET_LISTS, \n    LIKE_LIST, \n    UNLIKE_LIST, \n    LOADING_DATA, \n    DELETE_LIST,\n    POST_LIST,\n    SET_LIST,\n    SUBMIT_COMMENT\n} from \"../types\";\n\nconst initialState = {\n    lists: [],\n    list: {},\n    loading: false,\n};\n\nexport default function(state= initialState, action){\n    switch(action.type){\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_LISTS:\n            return {\n                ...state,\n                lists: action.payload,\n                loading: false\n            };\n        case SET_LIST:\n            return {\n                ...state,\n                list: action.payload,\n            };\n        case LIKE_LIST:\n        case UNLIKE_LIST:\n            let index = state.lists.findIndex((list)=>list.listId === action.payload.listId);\n            state.lists[index] = action.payload;\n            if(state.list.listId === action.payload.listId){\n                state.list = action.payload;\n            }\n            return {\n                ...state,\n            };\n        case DELETE_LIST:\n            index = state.lists.findIndex(list => list.listId === action.payload);\n            state.lists.splice(index, 1);\n            return {\n                ...state\n            }\n        case POST_LIST:\n            return {\n                ...state,\n                lists: [\n                    action.payload,\n                    ...state.lists\n                ]\n            }\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                list: {\n                    ...state.list,\n                    comments: [action.payload, ...state.list.comments]\n                }\n            }\n        default: \n        return state;\n        }\n}","import {\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    STOP_LOADING_UI\n  } from '../types';\n  \n  const initialState = {\n    loading: false,\n    errors: null\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: action.payload\n        };\n      case CLEAR_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: null\n        };\n      case LOADING_UI:\n        return {\n          ...state,\n          loading: true\n        };\n      case STOP_LOADING_UI:\n        return {\n          ...state,\n          loading: false\n        };\n      default:\n        return state;\n    }\n  }","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: uiReducer\n});\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;","import { \n    SET_USER, \n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_UNAUTHENTICATED, \n    LOADING_USER,\n    MARK_NOTIFICATIONS_READ\n} from \"../types\";\n\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) =>(dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios\n    .post('/login', userData)\n        .then(res =>{\n            setAuthorizationHeader(res.data.token);\n            dispatch(getUserData());\n            dispatch({type: CLEAR_ERRORS});\n            history.push('/');\n        })\n        .catch(err=>{\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const signupUser = (newUserData, history) =>(dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios\n    .post('/signup', newUserData)\n        .then(res =>{\n            setAuthorizationHeader(res.data.token);\n            dispatch(getUserData());\n            dispatch({type: CLEAR_ERRORS});\n            history.push('/');\n        })\n        .catch(err=>{\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({type: SET_UNAUTHENTICATED});\n}\n\nexport const getUserData = () =>(dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.get('/user')\n    .then(res =>{\n        dispatch({\n            type: SET_USER,\n            payload: res.data\n        })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const uploadImage = (formData) =>(dispatch)=>{\n    dispatch({type: LOADING_USER});\n    axios.post('/user/image', formData)\n    .then(() => {\n        dispatch(getUserData());\n    })\n    .catch(err => console.log(err));\n}\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n    dispatch({type: LOADING_USER});\n    axios.post('/user', userDetails)\n    .then(()=>{\n        dispatch(getUserData());\n    })\n    .catch((err)=>console.log(err));\n}\n\nexport const markNotificationsRead = (notificationIds) => dispatch => {\n    axios.post('/notifications', notificationIds)\n    .then(res => {\n        dispatch({\n            type: MARK_NOTIFICATIONS_READ\n        })\n    })\n    .catch(err => console.log(err));\n}\n\nconst setAuthorizationHeader = (token) =>{\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', `Bearer ${token}`);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\n  <Tooltip title={tip} className={tipClassName} placement=\"bottom\">\n    <IconButton onClick={onClick} className={btnClassName}>\n      {children}\n    </IconButton>\n  </Tooltip>\n);","import {\n    SET_LISTS, \n    LOADING_DATA, \n    LIKE_LIST, \n    UNLIKE_LIST, \n    DELETE_LIST, \n    LOADING_UI,\n    POST_LIST,\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    SET_LIST,\n    STOP_LOADING_UI,\n    SUBMIT_COMMENT\n} from '../types';\nimport axios from 'axios';\n\n// Get all lists\nexport const getLists = () => (dispatch) =>{\n    dispatch({type: LOADING_DATA});\n    axios.get('/lists')\n    .then((res)=>{\n        dispatch({\n            type: SET_LISTS,\n            payload: res.data\n        })\n    })\n    .catch(err=>{\n        dispatch({\n            type: SET_LISTS,\n            payload: []\n        })\n    })\n}\n\nexport const getList = (listId) => (dispatch)=>{\n    dispatch({type:LOADING_UI});\n    axios.get(`/list/${listId}`)\n    .then((res)=>{\n        dispatch({\n            type: SET_LIST,\n            payload: res.data\n        });\n        dispatch({\n            type: STOP_LOADING_UI\n        });\n    })\n    .catch(err => console.log(err));\n}\n\n\n//Post a list\nexport const postList = (newList) => (dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios.post('/list', newList)\n    .then(res => {\n        console.log('POSTED');\n        dispatch({\n            type: POST_LIST,\n            payload: res.data\n        });\n        dispatch(clearErrors());\n    })\n    .catch(err => {\n        console.log(`ERR: ${err}`);\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        });\n    });\n}\n\n//Like a list\nexport const likeList = (listId) => (dispatch) => {\n    axios.get(`/list/${listId}/like`)\n    .then(res => {\n        dispatch({\n            type: LIKE_LIST,\n            payload: res.data\n        })\n    })\n    .catch(err=>console.log(err));\n}\n\n//Unlike a list\nexport const unlikeList = (listId) => (dispatch) => {\n    axios.get(`/list/${listId}/unlike`)\n    .then(res => {\n        dispatch({\n            type: UNLIKE_LIST,\n            payload: res.data\n        })\n    })\n    .catch(err=>console.log(err));\n}\n\n// Submit a comment\nexport const submitComment = (listId, commentData) => (dispatch) => {\n    axios.post(`/list/${listId}/comment`, commentData)\n    .then(res=>{\n        dispatch({\n            type: SUBMIT_COMMENT,\n            payload: res.data\n        });\n        dispatch(clearErrors());\n    })\n    .catch(err => {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n// Delete List\nexport const deleteList = (listId) => (dispatch) => {\n    axios.delete(`/list/${listId}`)\n    .then(()=>{\n        dispatch({type: DELETE_LIST, payload: listId})\n    })\n    .catch(err => console.log(err));\n}\n\nexport const getUserData = (userHandle) => (dispatch)=>{\n    dispatch({type: LOADING_DATA});\n    axios.get(`/user/${userHandle}`)\n    .then(res =>{\n        dispatch({ \n            type: SET_LISTS,\n            payload: res.data.Lists\n        });\n    })\n    .catch(()=>{\n        dispatch({\n            type: SET_LISTS,\n            payload: null\n        });\n    });\n}\n\nexport const clearErrors = () => (dispatch) => {\n        dispatch({type: CLEAR_ERRORS});\n}","import React from 'react';\nimport axios from 'axios';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { postList, clearErrors} from '../../redux/actions/dataActions';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport TextField from '@material-ui/core/TextField';\nimport { yellow } from '@material-ui/core/colors';\n\n\n\nconst api_key='efe3d1c418342122bfb294bd355b5f96';\n\nconst styles = theme => ({\n    searchMovieTile: {\n        display: 'flex',\n        // float: 'left',\n    },\n    submitButton: {\n        position: 'relative',\n        float: \"right\",\n        marginTop: 10\n    },\n});\n\nclass SearchBar extends React.Component{\n    state={\n        searchTerm: \"\",\n        theMovieFilter: \"\",\n        filterAll: false,\n        isLoading: true,\n        searchError: \"No Movies Found\",\n        searchResults: [],\n        listBeingCreated: []\n    }\n    filterBySearchTerm=(search)=>{\n        this.setState({\n            theLocationFilter: search,\n        })\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${this.state.searchTerm}&page=1&include_adult=false`)\n            // .then(res => {\n            //     const listOfMovies = res.data.results;\n            //     console.log('list: ', listOfMovies);\n            // })\n            // .catch(err=>console.log(err))\n        .then(newsearchResults=>{\n            console.log(this.state.searchResults);\n            const listOfMovies = newsearchResults.data.results;\n            this.setState({\n                searchResults: listOfMovies\n            });\n            console.log('list: ', listOfMovies);\n        if(listOfMovies.length>0){\n        this.setState({\n            searchTerm: search,\n            filterAll: false,\n            searchResults: listOfMovies,\n            isLoading: false\n        });\n        console.log(this.state.searchResults);\n        }\n        else{\n        this.setState({\n            theMovieFilter: search,\n            filterAll: false,\n            isLoading: false,\n            searchError: \"No Movies Found\"\n        })\n        }\n        })\n        }\n    doingASearch=async (event)=>{\n        this.setState({\n        [event.target.name]: event.target.value\n    })\n    }\n    submitSearch= async (event)=>{\n        event.preventDefault();\n        this.filterBySearchTerm(this.state.searchTerm)\n        this.setState({\n            searchTerm: \"\"\n        })\n    }\n    clearInput = () =>{\n        this.setState({\n            searchTerm:\"\",\n            searchResults:[]\n        })\n    }\n    pushToList = (movie) =>{\n        \n        // if(this.state.listBeingCreated.some(m => m.title === movie.title).length === 0){\n        //     this.setState(prevState => ({\n        //         listBeingCreated: [...prevState.listBeingCreated, movie]\n        //     }));\n        //     console.log(`State: ${this.state.listBeingCreated}`);\n        // }\n    }\n    handleSubmit = (event) => {\n        //event.preventDefault();\n        \n        const ObjectToSubmit = {\n            movieList: this.state.listBeingCreated,\n            userHandle: 'user',\n            createdAt: new Date(),\n            likeCount: 0,\n            commentCount: 0 \n         }\n         console.log(`Submitting: ${ObjectToSubmit}`)\n        this.props.postList(ObjectToSubmit); \n        this.setState({\n            listBeingCreated: [],\n        })\n         \n    }\n    render(){\n        const {errors} = this.state;\n        const {classes, UI: {loading}} = this.props;\n        let itemsInList = this.state.listBeingCreated.length > 0 ?  this.state.listBeingCreated.map((item, index) => {\n            //console.log(item);\n                        return (<div>\n                <p># {index+1}</p>\n                <img src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\"/>\n                {item.title} \n            </div>   )    \n        }):(\n            null\n        );   \n        return(\n            <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"searchTerm\">\n                {/* <TextField id=\"standard-basic\" label=\"Movie\" variant=\"standard\" /> */}\n                {\n                    this.state.listBeingCreated.length > 0 ? (\n                        <div>\n                           {itemsInList} \n                        </div>\n                    ) : (\n                        null\n                    )\n                }\n                <input type=\"text\" name=\"searchTerm\" value={this.state.searchTerm} onChange={this.doingASearch} placeholder=\"Movie\" />\n                <button onClick={this.submitSearch}>Search</button>\n\n                <div className=\"searchIcon\">\n                {this.state.searchResults.length === 0 ? (\n                    <SearchIcon />\n                ) : (\n                    <CloseIcon id=\"clearBtn\" onClick={this.clearInput} />\n                )}\n                </div>\n                {/* <input type=\"submit\" value=\"submit\"/> */}\n                {this.state.searchResults.length > 0 ? this.state.searchResults.map(movie => (\n                    // <ul key={movie.title}>\n                        <div className={classes.searchMovieTile} onClick={()=> this.pushToList(movie)} >\n                            <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\"/>\n                            {movie.title}\n                        </div>\n                    // </ul>\n                ))\n            \n                :\n                    null\n                }\n                {/* {this.state.searchResults.forEach((searchResult)=>{\n                    searchResult.onClick = this.pushToList(searchResult);\n                })} */}\n            </label>\n            <Button \n                type=\"submit\" \n                variant=\"contained\" \n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}>\n                    Submit\n                {loading && (<CircularProgress size={30} className={classes.progressSpinner}/>) }\n            </Button>\n            </form>\n            \n        )\n        }\n    }\n\nSearchBar.propTypes = ({\n    postList: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n});\n\nconst mapStateToProps = (state) =>({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {postList, clearErrors})(withStyles(styles)(SearchBar));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n//Icons\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\n\n//Redux stuff\nimport { connect } from 'react-redux';\nimport { postList, clearErrors } from '../../redux/actions/dataActions';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\n\n\nconst api_key = 'efe3d1c418342122bfb294bd355b5f96';\n\nconst styles = theme => ({\n    //...theme,\n    submitButton: {\n        position: 'relative',\n        float: \"right\",\n        marginTop: 10\n    },\n    progressSpinner: {\n        position: 'absolute'\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '91%',\n        top: '6%'\n    },\n    searchMovieTile: {\n        display: 'flex',\n        // float: 'left',\n    },\n});\n\nclass PostList extends Component {\n\n    state = {\n        open: false,\n        body: \"\",\n        errors: {},\n        searchTerm: \"\",\n        theMovieFilter: \"\",\n        filterAll: false,\n        isLoading: true,\n        searchError: \"No Movies Found\",\n        searchResults: [],\n        listBeingCreated: [],\n        listDescription: \"\",\n        listTitle: \"\"\n    };\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            })\n        };\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: '',\n                open: false,\n                errors: {}\n            });\n        }\n    }\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false, errors: {} });\n        this.props.clearErrors();\n    }\n    handleChange = (event) => {\n        console.log('event.target.name', event.target.id)\n        this.setState({ [event.target.id]: event.target.value })\n    }\n\n    filterBySearchTerm = (search) => {\n        this.setState({\n            theLocationFilter: search,\n        })\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${this.state.searchTerm}&page=1&include_adult=false`)\n            // .then(res => {\n            //     const listOfMovies = res.data.results;\n            //     console.log('list: ', listOfMovies);\n            // })\n            // .catch(err=>console.log(err))\n            .then(newsearchResults => {\n                console.log(this.state.searchResults);\n                const listOfMovies = newsearchResults.data.results;\n                this.setState({\n                    searchResults: listOfMovies\n                });\n                console.log('list: ', listOfMovies);\n                if (listOfMovies.length > 0) {\n                    this.setState({\n                        searchTerm: search,\n                        filterAll: false,\n                        searchResults: listOfMovies,\n                        isLoading: false\n                    });\n                    // console.log(this.state.searchResults);\n                }\n                else {\n                    this.setState({\n                        theMovieFilter: search,\n                        filterAll: false,\n                        isLoading: false,\n                        searchError: \"No Movies Found\"\n                    })\n                }\n            })\n    }\n    doingASearch = async (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    submitSearch = async (event) => {\n        event.preventDefault();\n        this.filterBySearchTerm(this.state.searchTerm)\n        this.setState({\n            searchTerm: \"\"\n        })\n    }\n    clearInput = () => {\n        this.setState({\n            searchTerm: \"\",\n            searchResults: []\n        })\n    }\n    pushToList = (movie) => {\n        //Making sure no duplicate movies added\n        console.log(this.state.listBeingCreated.some(m => m.title === movie.title));\n        if (this.state.listBeingCreated.some(m => m.title === movie.title) === false) {\n            this.setState(prevState => ({\n                listBeingCreated: [...prevState.listBeingCreated, movie]\n            }));\n            console.log(`State: ${this.state.listBeingCreated}`);\n            this.setState(prevState => ({\n                searchResults: [],\n                searchTerm: \"\"\n            }));\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const ObjectToSubmit = {\n            movieList: this.state.listBeingCreated,\n            listTitle: this.state.listTitle,\n            listDescription: this.state.listDescription,\n            userHandle: 'user',\n            createdAt: new Date(),\n            likeCount: 0,\n            commentCount: 0\n        };\n        console.log(`Submitting: ${ObjectToSubmit}`);\n        console.log(ObjectToSubmit);\n        this.props.postList(ObjectToSubmit);\n        this.setState({\n            listBeingCreated: [],\n        })\n    }\n\n    render() {\n        const { errors } = this.state;\n        const { classes, UI: { loading } } = this.props;\n        let itemsInList = this.state.listBeingCreated.length > 0 ? this.state.listBeingCreated.map((item, index) => {\n            //console.log(item);\n            return (<div>\n                <p># {index + 1}</p>\n                <img src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\" />\n                {item.title}\n            </div>)\n        }) : (\n            null\n        );\n        return (\n            <Fragment>\n                <MyButton tip=\"Post a List\" onClick={this.handleOpen}>\n                    <AddIcon />\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon />\n                    </MyButton>\n                    <DialogTitle>\n                        Create a New List\n                    </DialogTitle>\n                    <DialogContent>\n                        {/* onSubmit={this.handleSubmit} */}\n                        {/* <form> */}\n                            <Input\n                                id=\"listTitle\"\n                                name=\"listTitle\"\n                                type=\"text\"\n                                label=\"Give your list a title\"\n                                placeholder=\"List Name\"\n                                onChange={this.handleChange}\n\n                                //NOT SURE ABOUT THIS BELOW\n                                // error={errors.body ? true: false}\n                                // helperText={errors.body}\n                                className={classes.textField}\n                                fullWidth\n                            />\n\n                            <label htmlFor=\"searchTerm\">\n                                {/* Showing the list */}\n                                {\n                                    this.state.listBeingCreated.length > 0 ? (\n                                        <div>\n                                            {itemsInList}\n                                        </div>\n                                    ) : (\n                                        null\n                                    )\n                                }\n\n                                <Input\n                                    id=\"listDescription\"\n                                    fullWidth\n                                    placeholder=\"Description\"\n                                    value={this.state.listDescription}\n                                    onChange={this.handleChange}\n                                    multiline\n                                    rows={4}\n                                />\n\n                                <form onSubmit={this.submitSearch}>\n                                <Input\n                                    id=\"searchTerm\"\n                                    fullWidth\n                                    placeholder=\"Search for movie to add...\"\n                                    // onSubmit={this.submitSearch}\n                                    // onInput={this.submitSearch}\n                                    value={this.state.searchTerm}\n                                    onChange={this.handleChange}\n                                    endAdornment={\n                                        <InputAdornment position='end'>\n                                            <IconButton onClick={this.submitSearch}>\n                                                {this.state.searchResults.length === 0 ? (\n                                                    <SearchIcon />\n                                                ) : (\n                                                    <CloseIcon id=\"clearBtn\" onClick={this.clearInput} />\n                                                )}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    } \n                                />\n                                </form>\n\n\n\n                                {this.state.searchResults.length > 0 ? this.state.searchResults.map(movie => (\n                                    <div className={classes.searchMovieTile} onClick={() => this.pushToList(movie)} >\n                                        <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\" />\n                                        {movie.title}\n                                    </div>\n                                ))\n\n                                    :\n                                    null\n                                }\n                                {/* {this.state.searchResults.forEach((searchResult)=>{\n                    searchResult.onClick = this.pushToList(searchResult);\n                })} */}\n                            </label>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submitButton}\n                                disabled={loading}\n                                onClick={this.handleSubmit}\n                                >\n                                Submit\n                                {loading && (<CircularProgress size={30} className={classes.progressSpinner} />)}\n                            </Button>\n                        {/* </form> */}\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n\n}\n\nPostList.propTypes = ({\n    postList: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n});\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, { postList, clearErrors })(withStyles(styles)(PostList));\n","import React, { Component, Fragment } from 'react';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\n\n//MUI Stuff\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n\n//Icons\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n//Redux\nimport {connect} from 'react-redux';\nimport {markNotificationsRead} from '../../redux/actions/userActions';\n\nclass Notifications extends Component{\n    state = {\n        anchorEl: null\n    };\n    handleOpen = (event) => {\n        this.setState({anchorEl: event.target});\n    }\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    }\n    onMenuOpened = () => {\n        let unreadNotificationsIds = this.props.notifications\n        .filter(notification =>!notification.read)\n        .map(notification => notification.notificationId);\n        this.props.markNotificationsRead(unreadNotificationsIds);\n    }\n    render(){\n        const notifications = this.props.notifications;\n        const anchorEl = this.state.anchorEl;\n\n        dayjs.extend(relativeTime);\n\n        let notificationsIcon;\n        if(notifications && notifications.length > 0){\n            notifications.filter(notification => notification.read === false).length > 0\n            ? (notificationsIcon = (\n                <Badge badgeContent={notifications.filter(notification => notification.read === false).length}\n                color=\"secondary\">\n                    <NotificationsIcon/>\n                </Badge>\n            )) : (\n                notificationsIcon = <NotificationsIcon/>\n            )\n        } else {\n            notificationsIcon = <NotificationsIcon/>\n        }\n        let notificationsMarkup = \n            notifications && notifications.length > 0 ? (\n                notifications.map(notification => {\n                    const verb = notification.type === 'like' ? 'liked' : 'commented on';\n                    const time = dayjs(notification.creratedAt).fromNow();\n                    const iconColor = notification.read ? 'primary': 'secondary';\n                    const icon = notification.type === 'like' ? (\n                        <FavoriteIcon color={iconColor} style={{marginRight:10}}/>\n                    ) : (\n                        <ChatIcon color={iconColor} style={{marginRight:10}}/>\n                    )\n                    return (\n                        <MenuItem key={notification.createdAt} onClick={this.handleClose}>\n                            {icon}\n                            <Typography\n                            component={Link}\n                            color=\"default\"\n                            variant=\"body1\"\n                            to={`/users/${notification.recipient}/list/${notification.listId}`}\n                            >\n                                {notification.sender} {verb} your list {time}\n                            </Typography>\n\n                        </MenuItem>\n                    )\n                })\n            ) : (\n                <MenuItem onClick={this.handleClose}>\n                    No Notifications\n                </MenuItem>\n            )\n        return (\n            <Fragment>\n                <Tooltip placement=\"top\" title=\"Notifications\">\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={this.handleOpen}\n                    >\n                        {notificationsIcon}\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n                onEntered={this.onMenuOpened}\n                >\n                    {notificationsMarkup}\n                </Menu>\n            </Fragment>\n        )\n    }\n}\n\nNotifications.propTypes = {\n    markNotificationsRead: PropTypes.func.isRequired,\n    notifications: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    notifications: state.user.notifications\n});\n\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications);","import React, { Component, Fragment } from 'react'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes  from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport PostList from '../list/PostList';\nimport Notifications from './Notifications';\n\n// Material UI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Tooltip } from '@material-ui/core';\n\n//Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ProfileIcon from '@material-ui/icons/Person';\n\n\n\n\n\nclass Navbar extends Component {\n    render() {\n        const {authenticated} = this.props;\n        return (\n            <AppBar>\n                <Toolbar className=\"nav-container\">\n                    {authenticated ? \n                    (\n                        <Fragment>\n                            <PostList />\n                            <Link to='/'>\n                                <MyButton tip=\"Home\">\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>   \n                            <Link to='/profile'>\n                                <MyButton tip=\"Profile\">\n                                    <ProfileIcon/>\n                                </MyButton>\n                            </Link>  \n\n                            <Notifications/>\n                        </Fragment>\n                    )\n                    :\n                    (\n                        <Fragment>\n                        <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/\" >Home</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\n                        </Fragment>\n\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n// import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated\n});\n\nAuthRoute.propTypes = {\n  user: PropTypes.object\n};\n\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component, Fragment } from 'react';\nimport withStyles  from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\n\n//MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\nimport { connect } from 'react-redux';\nimport {deleteList} from '../../redux/actions/dataActions';\n\nconst styles = {\n    deleteButton: {\n        position: 'relative',\n        left: '90%',\n        bottom: '53%'\n      }\n}\n\nclass DeleteList extends Component {\n    state = {\n        open: false\n    }\n    handleOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    }\n    deleteList = () => {\n        this.props.deleteList(this.props.listId);\n        this.setState({\n            open: false\n        });\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Delete List\"\n                onClick={this.handleOpen}\n                btnClassName={classes.deleteButton}>\n                    <DeleteOutline color=\"secondary\"/>\n                </MyButton>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>\n                        Are you sure you want to delete?\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.deleteList} color=\"secondary\">\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nDeleteList.propTypes = {\n    deleteList: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    listId: PropTypes.string.isRequired\n}\n\nexport default connect(null, {deleteList})(withStyles(styles)(DeleteList));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\n\n// MUI \nimport Grid from '@material-ui/core/Grid';\nimport  Typography  from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n   // ...theme,\n   invisibleSeparator: {\n    border: 'none',\n    margin: 4\n  },\n  visibleSeparator: {\n    width: '100%',\n    borderBottom: '1px solid rgba(0,0,0,0.1)',\n    marginBottom: 20\n  },\n   commentImage: {\n       maxWidth: '100%',\n       height: 100,\n       objectFit: 'cover',\n       borderRadius: '50%'\n   },\n   commentData: {\n        marginLeft: 20\n   }\n});\n\n\nclass Comments extends Component{\n    render(){\n        const {comments, classes} = this.props;\n        return (\n            <Grid container>\n                {comments.map((comment, index)=>{\n                    const {body, createdAt, userImage, userHandle} = comment;\n                    return (\n                        <Fragment key={createdAt}>\n                            <Grid item sm={12}>\n                                <Grid container>\n                                    <Grid item sm={2}>\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\n                                    </Grid>\n                                    <Grid item sm={9}>\n                                        <div className={classes.commentData}>\n                                            <Typography \n                                                variant=\"h5\"\n                                                component={Link}\n                                                to={`/users/${userHandle}`}\n                                                color=\"primary\">\n                                                    {userHandle}\n                                                </Typography>\n                                                <Typography\n                                                variant=\"body2\"\n                                                color=\"textSecondary\">\n                                                    {dayjs(createdAt).format('h:mm a,MMMM DD YYYY')}\n                                                </Typography>\n                                                <hr className={classes.invisibleSeparator}/>\n                                                <Typography\n                                                variant=\"body1\">\n                                                    {body}\n                                                </Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {index !== comments.length -1 && (\n                                 <hr className={classes.visibleSeparator}/>\n                            )}\n                        </Fragment>\n                    )\n                })}\n            </Grid>\n        )\n    }\n}\n\nComments.propTypes={\n    comments: PropTypes.array.isRequired\n}\n\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react'\nimport PropTypes  from 'prop-types';\nimport withStyles  from '@material-ui/styles/withStyles';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport { clearErrors, submitComment } from '../../redux/actions/dataActions';\n\n//MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles= theme => ({\n   // ...theme\n});\n\nclass CommentForm extends Component {\n    state = {\n        body: '',\n        errors: {}\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        };\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\n            this.setState({\n                body: ''\n            })\n        }\n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleSubmit = (event)=>{\n        event.preventDefault();\n        this.props.submitComment(this.props.listId, {body: this.state.body});\n    }\n    render() {\n        const {classes, authenticated} = this.props;\n        const errors = this.state.errors;\n\n        const commentFormMarkup = authenticated ? \n        (\n            <Grid item sm={12} style={{textAlign: 'center'}}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name=\"body\"\n                        type=\"text\"\n                        label=\"Add comment...\"\n                        error={errors.comment ? true : false}\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        fullWidth\n                        className={classes.TextField}\n                    />\n                    <Button \n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        >Submit</Button>\n                </form>\n                <hr className={classes.visibleSeperator}/>\n            </Grid>\n        )\n        :\n        null;\n\n        return commentFormMarkup;\n    }\n}\n\nCommentForm.propTypes = {\n    submitComment: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    listId: PropTypes.string.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n\n};\n\nconst mapStateToProps = state =>({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));\n","import React, { Component } from 'react'\nimport MyButton from '../../util/MyButton';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n//Icons\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n//Redux\nimport {connect} from 'react-redux';\nimport {likeList, unlikeList} from '../../redux/actions/dataActions';\n\n\n\nexport class LikeButton extends Component {\n  likedList = () => {\n    if(this.props.user.likes && this.props.user.likes.find((like) => like.listId === this.props.listId)){\n      return true;\n    } else return false;\n  };\n\n  likeList = () => {\n    this.props.likeList(this.props.listId);\n  };\n\n  unlikeList = () => {\n    this.props.unlikeList(this.props.listId);\n  };\n    render() {\n      const {  authenticated } = this.props.user;\n      const likeButton = !authenticated ? (\n        <Link to='/login'>\n          <MyButton tip=\"Like\">\n              <FavoriteBorder color=\"primary\"/>\n            \n          </MyButton>\n        </Link>\n      ) : (\n        this.likedList() ? (\n          <MyButton tip=\"Unlike\" onClick={this.unlikeList}>\n            <FavoriteIcon color=\"primary\"/>\n          </MyButton>\n        ) : (\n          <MyButton tip=\"Like\" onClick={this.likeList}>\n            <FavoriteBorder color=\"primary\"/>\n          </MyButton>\n        )\n      );\n        return  likeButton; \n    }\n}\n\nLikeButton.propTypes = {\n  user: PropTypes.object.isRequired,\n  listId: PropTypes.string.isRequired,\n  likeList: PropTypes.func.isRequired,\n  unlikeList: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state)=>({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeList, \n  unlikeList\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport dayjs from 'dayjs';\nimport {Link} from 'react-router-dom';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\n//MUI stuff\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography  from '@material-ui/core/Typography';\n\n//Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n\n//Redux stuff\nimport { connect } from 'react-redux';\nimport {getList, clearErrors} from '../../redux/actions/dataActions';\nimport  LikeButton  from './LikeButton';\n\nconst styles = theme => ({\n    //...theme,\n    invisibleSeparator: {\n        border: 'none',\n        margin: 4\n    },\n    visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n      },\n    profileImage:{\n        maxWidth:200,\n        maxHeight: 200,\n        borderRadius: '50%',\n        objectFit: 'cover'\n    },\n    dialogContent: {\n        padding: 20\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '90%'\n    },\n    expandButton: {\n        position: 'absolute',\n        left: '50%'\n    },\n    spinnerDiv: {\n        textAlign: 'center',\n        marginTop: 50,\n        marginBottom: 50\n    }\n});\n\nclass ListDialog extends Component{\n    state = {\n        open: false,\n        oldPath: '',\n        newPath:''\n    }\n    componentDidMount(){\n        if(this.props.openDialog){\n            this.handleOpen();\n        }\n    }\n    handleOpen = () => {\n        let oldPath = window.location.pathname;\n\n        const { userHandle, listId } = this.props;\n        const newPath = `/users/${userHandle}/list/${listId}`;\n\n        if(oldPath === newPath) oldPath=`/users/${userHandle}`;\n\n        window.history.pushState(null, null, newPath);\n\n        this.setState({open: true, oldPath, newPath});\n        this.props.getList(this.props.listId);\n    }\n    handleClose = () => {\n        window.history.pushState(null, null, this.state.oldPath);\n        this.setState({open: false});\n        this.props.clearErrors();\n    }\n    render(){\n        const {classes, \n            list: {\n                listId, \n                //movieList, \n                createdAt, \n                likeCount, \n                commentCount, \n                comments,\n                userImage, \n                userHandle\n            }, UI: {\n                loading\n            }\n        } = this.props;\n\n        const dialogMarkup = loading ? (\n            <div className={classes.spinnerDiv}>\n                <CircularProgress size={200} thickness={2}/>\n            </div>\n        )\n        :\n        (\n            <Grid container spacing={16}>\n                <Grid item sm={5}>\n                    <img src={userImage} alt=\"Profile\" className={classes.profileImage}/>\n                </Grid>\n\n                <Grid item sm={7}>\n                    <Typography \n                        component={Link}\n                        color=\"primary\"\n                        variant=\"h5\"\n                        to={`/users/${userHandle}`}\n                    >\n                      @{userHandle}  \n                    </Typography>\n                    <hr className={classes.invisibleSeparator}/>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\">\n                            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                        </Typography>\n                        <hr className={classes.invisibleSeparator}/>\n                        <Typography variant=\"body1\">\n                            THIS IS WHERE MOVIE LIST WILL GO\n                        </Typography>\n                        <LikeButton listId={listId}/>\n                        <span>{likeCount} {likeCount === 1 ? 'Like' : 'Likes'}</span>\n                        <MyButton tip=\"comments\">\n                            <ChatIcon color='primary'/>\n                        </MyButton>\n                        <span>{commentCount} {commentCount===1 ? 'Comment':'Comments'}</span>\n                </Grid>\n                <hr className={classes.visibleSeparator}/>\n                <CommentForm listId={listId}/>\n                <Comments comments={comments}/>\n            </Grid>\n\n                        \n\n        )\n\n        return (\n            <Fragment>\n                <MyButton onClick={this.handleOpen} tip='Expand List' tipClassName = {classes.expandButton}>\n                    <UnfoldMore color=\"primary\"/>\n                </MyButton>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\"\n                >\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon/>\n                    </MyButton>\n                    <DialogContent className={classes.dialogContent}>\n                        {dialogMarkup}\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        )\n    }\n\n}\n\nListDialog.propTypes = {\n    clearErrors: PropTypes.func.isRequired,\n    getList: PropTypes.func.isRequired,\n    listId: PropTypes.string.isRequired,\n    userHandle: PropTypes.string.isRequired,\n    list: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state)=>({\n    list: state.data.list,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    getList,\n    clearErrors\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ListDialog));","import React, { Component } from 'react';\nimport withStyles  from '@material-ui/core/styles/withStyles';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteList from './DeleteList';\nimport ListDialog from './ListDialog';\nimport LikeButton from './LikeButton';\n\n// MUI Stuff\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n//Redux\nimport {connect} from 'react-redux';\nimport {likeList, unlikeList} from '../../redux/actions/dataActions';\n\n//Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\n\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nconst styles = {\n    card: {\n      margin: '20px 40px',\n      padding: '30px',\n      overflowY: 'scroll',\n    },\n    listItems:{\n      height: '300px',\n      overflowY: 'auto',\n      whiteSpace: 'nowrap',\n    },\n    media:{\n      width: 100,\n      height: '20px',\n      paddingTop: '56.25%',\n      textAlign: 'center'\n  },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    body:{\n      backgroundColor: 'lightgray',\n    },\n}\n\n  class List extends Component{\n    \n    render(){\n      dayjs.extend(relativeTime);\n      \n      const {\n        classes,\n        list: {\n          movieList, \n          createdAt, \n          userImage, \n          userHandle, \n          listId, \n          likeCount, \n          commentCount,\n          listTitle,\n          listDescription\n        },\n        user: {\n          authenticated, credentials : { handle }\n        }\n    } = this.props;\n\n    const deleteButton = authenticated && userHandle === handle ? (\n      <DeleteList listId={listId}/>\n    ) : null\n\n    let listOfImages = [];\n    const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n    movieList.forEach((movie)=>{\n      listOfImages.push(<CardMedia\n          className={classes.media}\n          image={movie.imageUrl ? baseUrl + movie.imageUrl : baseUrl +movie.poster_path}\n          title={movie.title}\n        />);\n\n    });\n  \n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              <img src={userImage} alt='Profile Picture' width='60'/>\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n            </IconButton>\n          }\n          title={<Typography \n                  variant=\"h5\" \n                  component={Link} \n                  to={`/users/${userHandle}`}\n                  color=\"primary\"\n                  >\n                      {userHandle}\n                  </Typography>}\n                  \n          subheader={dayjs(createdAt).fromNow()}\n        />\n        <div className='listTitle'>\n          <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n              {listTitle || \"Top Movies\"}\n          </Typography>\n        </div>\n        <hr />\n\n        {deleteButton}\n        \n        <div className={classes.listItems}>\n        {listOfImages}\n        </div>\n        <hr />\n        <CardContent>\n        \n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {listDescription || \"List Description\"}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n          </IconButton>\n          <IconButton aria-label=\"share\">\n          </IconButton>\n          <LikeButton listId={listId}/>\n          <span>{likeCount} {likeCount === 1 ? 'Like' : 'Likes'}</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color='primary'/>\n          </MyButton>\n          <span>{commentCount} {commentCount === 1 ? 'Comment' : 'Comments'}</span>\n          <ListDialog listId={listId} userHandle={userHandle} openDialog={this.props.openDialog}/>\n        </CardActions>\n      </Card>\n    );\n    }\n  }\n\n  List.propTypes = {\n    likeList: PropTypes.func.isRequired,\n    unlikeList: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    list: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    openDialog: PropTypes.bool\n  };\n\n  const mapStateToProps = state => ({\n    user: state.user\n  });\n\n  const mapActionsToProps = {\n    likeList, \n    unlikeList\n  }\n\n  export default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(List));\n\n// export class List extends Component {\n\n//     render() {\n        \n//         const { classes, \n//             list : {movieList, \n//                 createdAt, \n//                 userImage, \n//                 userHandle, \n//                 listId, \n//                 likeCount, \n//                 commentCount} \n//             } = this.props;\n        \n//         return (\n//             <Card className={classes.card}>\n//                 <CardContent className={classes.content}>\n//                     <Typography \n//                     variant=\"h5\" \n//                     component={Link} \n//                     to={`/users/${userHandle}`}\n//                     color=\"primary\"\n//                     >\n//                         {userHandle}\n//                     </Typography>\n\n//                     <Typography \n//                     variant=\"body2\" \n//                     color=\"textSecondary\"\n//                     >\n//                         {createdAt}\n//                     </Typography>\n\n                    \n//                     <CardMedia\n//                         image={userImage}\n//                         title=\"Profile Image\"\n//                         className={classes.image}\n//                         />\n\n                    \n//                     {/* <Typography variant=\"body1\">{movieList.toString()}</Typography> */}\n\n\n//                 </CardContent>\n//                 <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n// <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n// <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n//             </Card>\n//         )\n//     }\n// }\n\n// export default withStyles(useStyles)(List);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport { editUserDetails } from '../../redux/actions/userActions';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n    // ...theme\n    button: {float: \"right\"}\n})\n\nclass EditDetails extends Component {\n    state={\n        bio: '',\n        website: '',\n        location: '',\n        open: false,\n    };\n    handleOpen = () =>{\n        this.setState({\n            open: true\n        });\n        this.mapUserDetailsToState(this.props.credentials);\n    }\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    };\n    componentDidMount(){\n        const credentials = this.props;\n        this.mapUserDetailsToState(credentials);\n    };\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n    handleSubmit = () =>{\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        }\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    }\n    mapUserDetailsToState = (credentials) =>{\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.bio : '',\n            location: credentials.location ? credentials.bio : '',\n        })\n    }\n    \n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\"/>\n                </MyButton>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit your details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                            name=\"bio\"\n                            type=\"text\"\n                            label=\"Bio\"\n                            multiline\n                            rows=\"3\"\n                            placeholder=\"A short bio...\"\n                            className={classes.TextField}\n                            value={this.state.bio}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                            <TextField\n                            name=\"website\"\n                            type=\"text\"\n                            label=\"Website\"\n                            placeholder=\"Your personal/professional website\"\n                            className={classes.TextField}\n                            value={this.state.website}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                            <TextField\n                            name=\"location\"\n                            type=\"text\"\n                            label=\"Location\"\n                            placeholder=\"Where you live\"\n                            className={classes.TextField}\n                            value={this.state.location}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) =>({\n    credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\n","export default __webpack_public_path__ + \"static/media/no-img.d6a64ff8.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport NoImg from '../images/no-img.png';\n\n//MUI\nimport Paper from '@material-ui/core/Paper';\n\n//Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\n\nconst styles = theme => ({\n    //...theme,\n    card: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'column',\n        padding: 25\n    },\n    cover: {\n        minWidth: 200,\n        objectFit: 'cover'\n    },\n    handle: {\n        width: 60, \n        height: 20,\n        margin: '0 auto 7px auto',\n        backgroundColor: 'rgba(0,0,0,0.2)',\n    },\n    date: {\n        height: 14,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        marginBottom: 10\n    },\n    fullLine: {\n        height: 15,\n        width: '100%',\n        marginBottom: 10,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n    },\n    halfLine: {\n        height: 15,\n        width: '50%',\n        marginBottom: 10,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n    },\n    '.image-wrapper': {\n        textAlign: 'center',\n        position: 'relative',\n    },\n    '.profile-image': {\n        width: 200,\n        height: 200,\n        objectFit: 'cover',\n        maxWidth: '100%',\n        borderRadius: '50%'\n    }\n})\n\nconst ProfileSkeleton = (props) => {\n    const { classes } = props;\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wrapper\">\n                    <img src={NoImg} alt=\"Profile\" className='profile-image'/>\n                </div>\n                <hr />\n                <div className=\"profile-details\">\n                    <div className={classes.handle}/>\n                    <hr />\n                    <div className={classes.fullLine}/>\n                    <div className={classes.fullLine}/>\n                    <hr/>\n                    <LocationOn color=\"primary\"/><span>Location</span>\n                    <hr/>\n                    <LinkIcon color=\"primary\"/> https://website.com\n                    <hr/>\n                    <CalendarToday color=\"primary\"/> Joined Date\n                       \n                </div>\n\n\n            </div>\n        </Paper>\n    )\n}\n\nProfileSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ProfileSkeleton);\n\n\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {Link} from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport EditDetails from './EditDetails';\nimport MyButton from '../../util/MyButton';\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\n\n// MUI stuff\nimport Button from '@material-ui/core/Button'; \nimport Typography from '@material-ui/core/Typography';\nimport MuiLink from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper'; \n\n//Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport EditIcon from '@material-ui/icons/Edit';\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\n\n//Redux\nimport {connect} from 'react-redux';\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\n\n\n\n\n\nconst styles = (theme) => ({\n    profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: '#00bcd4'\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      }\n});\n\nclass Profile extends Component {\n    handleImageChange = (event) =>{\n        const image=event.target.files[0];\n        const formData = new FormData();\n        formData.append('image', image, image.name);\n        this.props.uploadImage(formData);\n\n    }\n    handleEditPicture = ()=>{\n        const fileInput = document.getElementById('imageInput');\n        fileInput.click();\n    }\n    handleLogout = () =>{\n        this.props.logoutUser();\n    }\n    render() {\n        const {\n            classes, \n            user: {\n                credentials: {handle, createdAt, imageUrl, bio, website, location}, \n                loading,\n                authenticated\n                }\n            } = this.props;\n\n        let profileMarkup = !loading ? (authenticated ? (\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img className=\"profile-image\" src={imageUrl} alt = \"profile\"/>\n                        <input \n                        type=\"file\" \n                        id=\"imageInput\" \n                        hidden=\"hidden\"\n                        onChange={this.handleImageChange}/>\n                    <MyButton tip=\"Edit profile picture\" onClick={this.handleEditPicture} btnClassName=\"button\">\n                        <EditIcon color=\"primary\"/>\n                    </MyButton>\n                    </div>\n                    <hr/> \n                    <div className=\"profile-details\">\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n                            @{handle}\n                        </MuiLink>\n                        <hr/>\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\n                        <hr/>\n                        {location && (\n                            <Fragment>\n                                <LocationOn color=\"primary\"/> <span>{location}</span>\n                                <hr/>\n                            </Fragment>\n                        )}\n                        {website && (\n                            <Fragment>\n                                <LinkIcon color=\"primary\"/>\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}{website}\n                                </a>\n                                <hr/>\n                            </Fragment>\n                        )}\n                        <CalendarToday color=\"primary\"/> {' '}\n                        <span>Joined {dayjs(createdAt).format('YYYY MMM')}</span>\n                    </div>\n                    <MyButton tip=\"Logout\" onClick={this.handleLogout}>\n                        <KeyboardReturn color=\"primary\"/>\n                    </MyButton>\n                    <EditDetails/>\n                </div>\n            </Paper>\n        ) : (\n            <Paper className={classes.paper}>\n                <Typography variant=\"body2\" align=\"center\">\n                    No profile found, please log in again...\n                    <div className={classes.buttons}>\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\n                            Login\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">\n                            Signup\n                        </Button>\n                    </div>\n                </Typography>\n            </Paper>\n        )) : (<ProfileSkeleton/>);\n\n\n        return profileMarkup;\n    }\n}\n\nconst mapStateToProps = (state) =>({\n    user: state.user\n});\n\nconst mapActionsToProps = {logoutUser, uploadImage};\n\nProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    uploadImage: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nexport default connect(\n    mapStateToProps, \n    mapActionsToProps\n  )(withStyles(styles)(Profile));\n","import React, {Fragment} from 'react';\nimport NoImg from '../images/no-img.png';\nimport PropTypes from 'prop-types';\n\n//MUI\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n    //...theme,\n    card: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'column',\n        padding: 25\n    },\n    cover: {\n        minWidth: 200,\n        objectFit: 'cover'\n    },\n    handle: {\n        width: 60, \n        height: 25,\n        //backgroundColor: theme.palette.primary.main,\n        marginBottom: 7,\n        backgroundColor: 'rgba(0,0,0,0.2)',\n    },\n    date: {\n        height: 14,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        marginBottom: 10\n    },\n    fullLine: {\n        height: 15,\n        width: '90%',\n        marginBottom: 10,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n    },\n    halfLine: {\n        height: 15,\n        width: '50%',\n        marginBottom: 10,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n    },\n})\n\nconst ListSkeleton = (props) => {\n    const {classes} = props;\n\n    const content = Array.from({length: 5}).map((item, index)=>(\n        <Card className={classes.card} key={index}>\n            <CardMedia className={classes.cover} image={NoImg}/>\n            <CardContent className={classes.cardContent}>\n                <div className={classes.handle}/>\n                <div className={classes.date}/>\n                <div className={classes.fullLine}/>\n                <div className={classes.fullLine}/>\n                <div className={classes.halfLine}/>\n            </CardContent>\n        </Card>\n    ))\n\n    return <Fragment>{content}</Fragment>\n}\n\nListSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ListSkeleton);","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { PropTypes } from 'prop-types';\n\nimport List from '../components/list/List';\nimport Profile from '../components/profile/Profile';\nimport ListSkeleton from '../util/ListSkeleton';\n\nimport {connect} from 'react-redux';\nimport {getLists} from '../redux/actions/dataActions';\n\nclass home extends Component {\n    componentDidMount(){\n        this.props.getLists();\n    }\n    render() {\n        const { lists, loading} = this.props.data;\n        let recentListsMarkup = !loading ? (\n            lists.map(list => <List key={list.listId} list={list} />)\n        ):(\n            <ListSkeleton/>\n            );\n        return (\n            <div>\n                {recentListsMarkup}\n            </div>\n            // <Grid container spacing={16}>\n            //     <Grid item sm={7} xs={12}>\n            //         {recentListsMarkup}\n            //     </Grid>\n            //     <Grid item sm={1} xs={12}>\n                    \n            //     </Grid>\n            //     <Grid item sm={4} xs={12}>\n            //         <Profile />\n            //     </Grid>\n            // </Grid> \n        );\n    }\n}\n\nhome.propTypes = {\n    getLists: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getLists})(home);\n","export default __webpack_public_path__ + \"static/media/icon.1b28aebf.png\";","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport {Link} from 'react-router-dom';\n\n//MUI stuff\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport  CircularProgress  from '@material-ui/core/CircularProgress';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport {loginUser} from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\n\n\nclass login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n\n            errors: {}\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if (nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history);\n        \n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        const {classes, UI: {loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm> \n                    <img src={AppIcon} alt=\"Icon\" height='50' width='50' className={classes.image}/>\n                    <Typography\n                    variant=\"h2\" \n                    className={classes.pageTitle}>\n                        Login\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        helperText={errors.email}\n                        error= {errors.email ? true : false}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        helperText={errors.password}\n                        error= {errors.password ? true : false}\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        {errors.general && (\n                            <Typography\n                            variant=\"body2\"\n                            className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        disabled = {loading}\n                        >\n                            Login\n                            {loading && (\n                                < CircularProgress\n                                size={30}\n                                className={classes.progress}/>\n                            )}\n                        </Button>\n                        <br />\n                        <br />\n                        <small>Don't have an account? Sign up <Link to=\"/signup\">here</Link></small>\n                    </form>\n\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport {Link} from 'react-router-dom';\n\n//MUI stuff\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport  CircularProgress  from '@material-ui/core/CircularProgress';\n\n// Redux stuff\nimport {connect} from 'react-redux';\nimport {signupUser} from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if (nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        this.props.signupUser(newUserData, this.props.history);\n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        const {classes, UI: {loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm> \n                    <img src={AppIcon} alt=\"Icon\" height='50' width='50' className={classes.image}/>\n                    <Typography\n                    variant=\"h2\" \n                    className={classes.pageTitle}>\n                        Signup\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        helperText={errors.email}\n                        error= {errors.email ? true : false}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        helperText={errors.password}\n                        error= {errors.password ? true : false}\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        label=\"Confirm Password\"\n                        className={classes.textField}\n                        helperText={errors.confirmPassword}\n                        error= {errors.confirmPassword ? true : false}\n                        value={this.state.confirmPassword}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"handle\"\n                        name=\"handle\"\n                        type=\"text\"\n                        label=\"Handle\"\n                        className={classes.textField}\n                        helperText={errors.handle}\n                        error= {errors.handle ? true : false}\n                        value={this.state.handle}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        {errors.general && (\n                            <Typography\n                            variant=\"body2\"\n                            className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        disabled = {loading}\n                        >\n                            Signup\n                            {loading && (\n                                < CircularProgress\n                                size={30}\n                                className={classes.progress}/>\n                            )}\n                        </Button>\n                        <br />\n                        <br />\n                        <small>Already have an account? Login <Link to=\"/login\">here</Link></small>\n                    </form>\n\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    signupUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {signupUser})(withStyles(styles)(signup));\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n\n// MUI Stuff\nimport MuiLink from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n//Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\n\nconst styles = (theme) => ({\n    profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: '#00bcd4'\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n      },\n});\n\nconst StaticProfile = (props) =>{\n    const {classes, profile: {handle, createdAt, imageUrl, bio, website, location}} = props;\n\n    return (\n        <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img className=\"profile-image\" src={imageUrl} alt = \"profile\"/>\n                    </div>\n                    <hr/> \n                    <div className=\"profile-details\">\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n                            @{handle}\n                        </MuiLink>\n                        <hr/>\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\n                        <hr/>\n                        {location && (\n                            <Fragment>\n                                <LocationOn color=\"primary\"/> <span>{location}</span>\n                                <hr/>\n                            </Fragment>\n                        )}\n                        {website && (\n                            <Fragment>\n                                <LinkIcon color=\"primary\"/>\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {' '}{website}\n                                </a>\n                                <hr/>\n                            </Fragment>\n                        )}\n                        <CalendarToday color=\"primary\"/> {' '}\n                        <span>Joined {dayjs(createdAt).format('YYYY MMM')}</span>\n                    </div> \n                </div>\n            </Paper>\n    )\n}\n\nStaticProfile.propTypes = {\n    profile: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport List from '../components/list/List';\nimport Grid from '@material-ui/core/Grid';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport ListSkeleton from '../util/ListSkeleton';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\n\nimport {connect} from 'react-redux';\nimport {getUserData} from '../redux/actions/dataActions';\n\nclass user extends Component {\n    state = {\n        profile: null,\n        listIdParam: null\n    }\n    componentDidMount(){\n        const handle = this.props.match.params.handle;\n        const listId = this.props.match.params.listId;\n\n        if (listId) this.setState({listIdParam: listId});\n\n        this.props.getUserData(handle);\n        axios.get(`/user/${handle}`)\n        .then(res => {\n            this.setState({\n                profile: res.data.user\n            })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n    render() {\n        const {lists, loading} = this.props.data;\n        const {listIdParam} = this.state;\n        \n        const listsMarkup = loading ? (\n            <ListSkeleton/>\n        ) : lists === null ? (\n            <p>No Lists</p>\n        ) : !listIdParam ? (\n            lists.map(list => <List key={list.listId} list={list} />)\n        ) : (\n            lists.map(list =>{\n                if(list.listId !== listIdParam){\n                    return <List key={list.listId} list={list} />;\n                } else {\n                    return <List key={list.listId} list={list} openDialog/>;\n                }\n            })\n        )\n        return (\n            <Grid container spacing={16}>\n            <Grid item sm={8} xs={12}>\n                {listsMarkup}\n            </Grid>\n            <Grid item sm={4} xs={12}>\n                {this.state.profile === null ? (\n                        <ProfileSkeleton/>\n                    ): (\n                        <StaticProfile profile={this.state.profile} />\n                    )\n                }\n            </Grid>\n        </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n});\n\nuser.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, {getUserData})(user);\n","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { PropTypes } from 'prop-types';\n\nimport List from '../components/list/List';\nimport Profile from '../components/profile/Profile';\nimport ListSkeleton from '../util/ListSkeleton';\n\nimport {connect} from 'react-redux';\nimport {getLists} from '../redux/actions/dataActions';\n\nclass profile extends Component {\n    componentDidMount(){\n        this.props.getLists();\n    }\n    render() {\n        const { lists, loading} = this.props.data;\n        let recentListsMarkup = !loading ? (\n            lists.map(list => <List key={list.listId} list={list} />)\n        ):(\n            <ListSkeleton/>\n            );\n        return (\n            <Profile />\n            // <Grid container spacing={16}>\n            //     <Grid item sm={7} xs={12}>\n            //         {recentListsMarkup}\n            //     </Grid>\n            //     <Grid item sm={1} xs={12}>\n                    \n            //     </Grid>\n            //     <Grid item sm={4} xs={12}>\n            //         <Profile />\n            //     </Grid>\n            // </Grid> \n        );\n    }\n}\n\nprofile.propTypes = {\n    getLists: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getLists})(profile);\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport themeFile from './util/theme';\nimport jwtDecode from 'jwt-decode';\n\n// import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport  createMuiTheme  from '@material-ui/core/styles/createMuiStrictModeTheme';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\n//Redux\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n//components \nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\n\n//pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/user';\nimport profile from './pages/profile';\n\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = \"https://us-central1-critic-v2.cloudfunctions.net/api\";\n\nconst theme = createMuiTheme(themeFile);\n\nconst token = localStorage.FBIdToken;\nif(token){\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({type: SET_AUTHENTICATED});\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component{\n  render(){\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <Router>\n              <Navbar />\n              <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/\" component={home}/>\n                  <AuthRoute \n                  exact \n                  path=\"/login\" \n                  component={login} \n                  />\n                  <AuthRoute \n                  exact \n                  path=\"/signup\" \n                  component={signup} \n                  />\n                   <Route \n                  exact \n                  path=\"/profile\" \n                  component={profile} \n                  />\n                  <Route exact path=\"/users/:handle\" component={user}/>\n                  <Route exact path=\"/users/:handle/list/:listId\" component={user}/>\n                </Switch>\n              </div>\n            </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\n    palette: {\n      primary: {\n        light: '#33c9dc',\n        main:'#00bcd4',\n        dark:'#008394',\n        contrastText:'#fff'\n      },\n      secondary: {\n        light: '#ff6333',\n        main:'#ff3d00',\n        dark:'#b22a00',\n        contrastText:'#fff'\n      }\n    },\n    typography: {\n      useNextVariants: true,\n    }, \n\n      spreadThis: {form: {\n        textAlign: 'center'\n      },\n      image: {\n        margin: '20px auto 20px auto'\n      },\n      pageTitle: {\n        margin: '10px auto 10px auto'\n      },\n      textField: {\n        margin: '10px auto 10px auto'\n      },\n      button: {\n        marginTop: 20,\n        position: 'relative'\n      },\n      customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n      },\n      progress: {\n        position: 'absolute'\n      },\n      invisibleSeparator: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n      },\n      paper: {\n        padding: 20\n      },\n      profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: '#00bcd4'\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      }\n    }\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}