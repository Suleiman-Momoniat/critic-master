[{"/Users/suli/Desktop/critic-master/critic-client/src/index.js":"1","/Users/suli/Desktop/critic-master/critic-client/src/App.js":"2","/Users/suli/Desktop/critic-master/critic-client/src/reportWebVitals.js":"3","/Users/suli/Desktop/critic-master/critic-client/src/util/theme.js":"4","/Users/suli/Desktop/critic-master/critic-client/src/components/Navbar.js":"5","/Users/suli/Desktop/critic-master/critic-client/src/pages/home.js":"6","/Users/suli/Desktop/critic-master/critic-client/src/util/AuthRoute.js":"7","/Users/suli/Desktop/critic-master/critic-client/src/redux/store.js":"8","/Users/suli/Desktop/critic-master/critic-client/src/pages/signup.js":"9","/Users/suli/Desktop/critic-master/critic-client/src/pages/login.js":"10","/Users/suli/Desktop/critic-master/critic-client/src/components/List.js":"11","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/uiReducer.js":"12","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/userReducer.js":"13","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/dataReducer.js":"14","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js":"15","/Users/suli/Desktop/critic-master/critic-client/src/redux/types.js":"16","/Users/suli/Desktop/critic-master/critic-client/src/components/Profile.js":"17","/Users/suli/Desktop/critic-master/critic-client/src/components/EditDetails.js":"18","/Users/suli/Desktop/critic-master/critic-client/src/util/MyButton.js":"19","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/dataActions.js":"20","/Users/suli/Desktop/critic-master/critic-client/src/components/DeleteList.js":"21","/Users/suli/Desktop/critic-master/critic-client/src/components/PostList.js":"22","/Users/suli/Desktop/critic-master/critic-client/src/components/ListDialog.js":"23"},{"size":478,"mtime":1628144683906,"results":"24","hashOfConfig":"25"},{"size":2041,"mtime":1628706396725,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1628144016176,"results":"27","hashOfConfig":"25"},{"size":2041,"mtime":1629044528921,"results":"28","hashOfConfig":"25"},{"size":2003,"mtime":1629224165670,"results":"29","hashOfConfig":"25"},{"size":1134,"mtime":1629142763177,"results":"30","hashOfConfig":"25"},{"size":608,"mtime":1628706562223,"results":"31","hashOfConfig":"25"},{"size":739,"mtime":1628266576817,"results":"32","hashOfConfig":"25"},{"size":5746,"mtime":1628706578022,"results":"33","hashOfConfig":"25"},{"size":4589,"mtime":1628337705512,"results":"34","hashOfConfig":"25"},{"size":9448,"mtime":1629480948467,"results":"35","hashOfConfig":"25"},{"size":752,"mtime":1629480836509,"results":"36","hashOfConfig":"25"},{"size":1223,"mtime":1629196176994,"results":"37","hashOfConfig":"25"},{"size":1413,"mtime":1629482429809,"results":"38","hashOfConfig":"25"},{"size":2269,"mtime":1629134250313,"results":"39","hashOfConfig":"25"},{"size":708,"mtime":1629480858710,"results":"40","hashOfConfig":"25"},{"size":5955,"mtime":1629139572126,"results":"41","hashOfConfig":"25"},{"size":4747,"mtime":1629139754980,"results":"42","hashOfConfig":"25"},{"size":388,"mtime":1629139802965,"results":"43","hashOfConfig":"25"},{"size":2223,"mtime":1629480843709,"results":"44","hashOfConfig":"25"},{"size":2363,"mtime":1629225071099,"results":"45","hashOfConfig":"25"},{"size":9377,"mtime":1629298237870,"results":"46","hashOfConfig":"25"},{"size":4121,"mtime":1629482689451,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1gguv7k",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/suli/Desktop/critic-master/critic-client/src/index.js",[],["102","103"],"/Users/suli/Desktop/critic-master/critic-client/src/App.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/reportWebVitals.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/theme.js",["104"],"export default {\n    palette: {\n      primary: {\n        light: '#33c9dc',\n        main:'#00bcd4',\n        dark:'#008394',\n        contrastText:'#fff'\n      },\n      secondary: {\n        light: '#ff6333',\n        main:'#ff3d00',\n        dark:'#b22a00',\n        contrastText:'#fff'\n      }\n    },\n    typography: {\n      useNextVariants: true,\n    }, \n\n      spreadThis: {form: {\n        textAlign: 'center'\n      },\n      image: {\n        margin: '20px auto 20px auto'\n      },\n      pageTitle: {\n        margin: '10px auto 10px auto'\n      },\n      textField: {\n        margin: '10px auto 10px auto'\n      },\n      button: {\n        marginTop: 20,\n        position: 'relative'\n      },\n      customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n      },\n      progress: {\n        position: 'absolute'\n      },\n      invisibleSeparator: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n      },\n      paper: {\n        padding: 20\n      },\n      profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: '#00bcd4'\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      }\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/components/Navbar.js",["105"],"import React, { Component, Fragment } from 'react'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes  from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport PostList from './PostList';\n\n// Material UI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Tooltip } from '@material-ui/core';\n\n//Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport Notifications from '@material-ui/icons/Notifications';\n\n\n\nclass Navbar extends Component {\n    render() {\n        const {authenticated} = this.props;\n        return (\n            <AppBar>\n                <Toolbar className=\"nav-container\">\n                    {authenticated ? \n                    (\n                        <Fragment>\n                            <PostList />\n                            <Link to='/'>\n                                <MyButton tip=\"Home\">\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>\n                            <MyButton tip=\"Notifications\">\n                                <Notifications/>\n                            </MyButton>\n                        </Fragment>\n                    )\n                    :\n                    (\n                        <Fragment>\n                        <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/\" >Home</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\n                        </Fragment>\n\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","/Users/suli/Desktop/critic-master/critic-client/src/pages/home.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/AuthRoute.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/store.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/pages/signup.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/pages/login.js",["106"],"import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n//MUI stuff\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport  CircularProgress  from '@material-ui/core/CircularProgress';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport {loginUser} from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\n\n\nclass login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n\n            errors: {}\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if (nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history);\n        \n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        const {classes, UI: {loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm> \n                    <img src={AppIcon} alt=\"Icon\" height='50' width='50' className={classes.image}/>\n                    <Typography\n                    variant=\"h2\" \n                    className={classes.pageTitle}>\n                        Login\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        helperText={errors.email}\n                        error= {errors.email ? true : false}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        helperText={errors.password}\n                        error= {errors.password ? true : false}\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        {errors.general && (\n                            <Typography\n                            variant=\"body2\"\n                            className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        disabled = {loading}\n                        >\n                            Login\n                            {loading && (\n                                < CircularProgress\n                                size={30}\n                                className={classes.progress}/>\n                            )}\n                        </Button>\n                        <br />\n                        <br />\n                        <small>Don't have an account? Sign up <Link to=\"/signup\">here</Link></small>\n                    </form>\n\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));\n","/Users/suli/Desktop/critic-master/critic-client/src/components/List.js",["107","108","109","110","111"],"/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/uiReducer.js",["112"],"/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/userReducer.js",["113"],"import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_LIST,\n    UNLIKE_LIST\n  } from '../types';\n  \n  const initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case LIKE_LIST:\n        return {\n          ...state,\n          likes: [\n            ...state.likes,\n            {\n              userHandle:state.credentials.userHandle,\n              listId: action.payload.listId\n            }\n          ]\n        }\n        case UNLIKE_LIST:\n        return {\n          ...state,\n          likes: state.likes.filter(like => like.listId !== action.payload.listId)\n        }\n      default:\n        return state;\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/dataReducer.js",["114"],"/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/types.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/Profile.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/EditDetails.js",["115"],"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport { editUserDetails } from '../redux/actions/userActions';\nimport { Tooltip } from '@material-ui/core';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n    // ...theme\n    button: {float: \"right\"}\n})\n\nclass EditDetails extends Component {\n    state={\n        bio: '',\n        website: '',\n        location: '',\n        open: false,\n    };\n    handleOpen = () =>{\n        this.setState({\n            open: true\n        });\n        this.mapUserDetailsToState(this.props.credentials);\n    }\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    };\n    componentDidMount(){\n        const credentials = this.props;\n        this.mapUserDetailsToState(credentials);\n    };\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n    handleSubmit = () =>{\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        }\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    }\n    mapUserDetailsToState = (credentials) =>{\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.bio : '',\n            location: credentials.location ? credentials.bio : '',\n        })\n    }\n    \n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\"/>\n                </MyButton>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit your details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                            name=\"bio\"\n                            type=\"text\"\n                            label=\"Bio\"\n                            multiline\n                            rows=\"3\"\n                            placeholder=\"A short bio...\"\n                            className={classes.TextField}\n                            value={this.state.bio}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                            <TextField\n                            name=\"website\"\n                            type=\"text\"\n                            label=\"Website\"\n                            placeholder=\"Your personal/professional website\"\n                            className={classes.TextField}\n                            value={this.state.website}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                            <TextField\n                            name=\"location\"\n                            type=\"text\"\n                            label=\"Location\"\n                            placeholder=\"Where you live\"\n                            className={classes.TextField}\n                            value={this.state.location}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) =>({\n    credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\n","/Users/suli/Desktop/critic-master/critic-client/src/util/MyButton.js",["116"],"import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\n  <Tooltip title={tip} className={tipClassName} placement=\"bottom\">\n    <IconButton onClick={onClick} className={btnClassName}>\n      {children}\n    </IconButton>\n  </Tooltip>\n);","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/dataActions.js",["117"],"/Users/suli/Desktop/critic-master/critic-client/src/components/DeleteList.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/PostList.js",["118"],"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Icons\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport { postList, clearErrors} from '../redux/actions/dataActions';\n\nconst styles = theme => ({\n    //...theme,\n    submitButton: {\n        position: 'relative',\n        float: \"right\",\n        marginTop: 10\n    },\n    progressSpinner: {\n        position: 'absolute'\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '91%',\n        top: '6%'\n    }\n});\n\nconst dummyObject = {\n        \n    userHandle: 'user',\n    movieList: [{\n        \"imageUrl\": \"/aPZOt9BR3gnk1RyX924ySq81S4P.jpg\",\n        \"genre_ids\": {\n            \"0\": \"35\",\n            \"1\": \"10402\",\n            \"2\": \"10749\",\n            \"3\": \"10751\"\n        },\n        \"backdrop_path\": \"/rvsPkUYhWZkAKMb2fnWHw5pNAjZ.jpg\",\n        \"original_language\": \"en\",\n        \"description\": \"Matchmaker, Dolly Levi takes a trip to Yonkers, New York to see the well-known unmarried half-a-millionaire, Horace Vandergelder. While there, she convinces him, his two stock clerks and his niece and her beau to go to New York City.\",\n        \"name\": \"Hello, Dolly!\",\n        \"id\": \"14030\",\n        \"vote_average\": \"7\",\n        \"release_date\": \"1969-12-12\"\n    },\n    {\n        \"imageUrl\": \"/bHHt3HIr7MpYiRSw1XNxZm3B3cn.jpg\",\n        \"name\": \"Hello Again\",\n        \"release_date\": \"2017-11-08\",\n        \"original_language\": \"en\",\n        \"id\": \"446289\",\n        \"backdrop_path\": \"/4w7BJ1r8ovi1PAoFrpfIJYhfacm.jpg\",\n        \"description\": \"Ten lost souls slip in and out of one another's arms in a daisy-chained musical exploration of love's bittersweet embrace. A film adaptation of Michael John LaChiusa's celebrated musical, originally based on Arthur Schnitzler's play, La Ronde.\",\n        \"genre_ids\": {\n            \"0\": \"18\",\n            \"1\": \"10402\",\n            \"2\": \"10749\"\n        },\n        \"vote_average\": \"5.4\"\n    },\n    {\n        \"imageUrl\": \"/bHHt3HIr7MpYiRSw1XNxZm3B3cn.jpg\",\n        \"name\": \"Hello Again\",\n        \"release_date\": \"2017-11-08\",\n        \"original_language\": \"en\",\n        \"id\": \"446289\",\n        \"backdrop_path\": \"/4w7BJ1r8ovi1PAoFrpfIJYhfacm.jpg\",\n        \"description\": \"Ten lost souls slip in and out of one another's arms in a daisy-chained musical exploration of love's bittersweet embrace. A film adaptation of Michael John LaChiusa's celebrated musical, originally based on Arthur Schnitzler's play, La Ronde.\",\n        \"genre_ids\": {\n            \"0\": \"18\",\n            \"1\": \"10402\",\n            \"2\": \"10749\"\n        },\n        \"vote_average\": \"5.4\"\n    },\n    {\n        \"original_language\": \"en\",\n        \"backdrop_path\": \"/v2QVQs3ndYs8945dqDzglatCB6Y.jpg\",\n        \"vote_average\": \"5.5\",\n        \"description\": \"Lucy Chadman (Shelley Long) chokes to death and is resurrected by her loopy sister Zelda (Judith Ivey) on the one year anniversary of her death. Lucy, of course, does not believe she has actually been dead and thinks it is an elaborate hoax until she goes to her apartment and discovers her husband (Corbin Bernsen) married to her gold digging best friend, Kim (Sela Ward).\",\n        \"imageUrl\": \"/uwBdAVvrk8iLB30cqu4Z1LXBm4T.jpg\",\n        \"release_date\": \"1987-11-06\",\n        \"genre_ids\": {\n            \"0\": \"35\",\n            \"1\": \"18\",\n            \"2\": \"14\",\n            \"3\": \"878\",\n            \"4\": \"10749\"\n        },\n        \"id\": \"35151\",\n        \"name\": \"Hello Again\",\n        \"title\": \"Hello\"\n    },\n    {\n        \"imageUrl\": \"/bHHt3HIr7MpYiRSw1XNxZm3B3cn.jpg\",\n        \"name\": \"Hello Again\",\n        \"release_date\": \"2017-11-08\",\n        \"original_language\": \"en\",\n        \"id\": \"446289\",\n        \"backdrop_path\": \"/4w7BJ1r8ovi1PAoFrpfIJYhfacm.jpg\",\n        \"description\": \"Ten lost souls slip in and out of one another's arms in a daisy-chained musical exploration of love's bittersweet embrace. A film adaptation of Michael John LaChiusa's celebrated musical, originally based on Arthur Schnitzler's play, La Ronde.\",\n        \"genre_ids\": {\n            \"0\": \"18\",\n            \"1\": \"10402\",\n            \"2\": \"10749\"\n        },\n        \"vote_average\": \"5.4\"\n    },\n    {\n        \"imageUrl\": \"/bHHt3HIr7MpYiRSw1XNxZm3B3cn.jpg\",\n        \"name\": \"Hello Again\",\n        \"release_date\": \"2017-11-08\",\n        \"original_language\": \"en\",\n        \"id\": \"446289\",\n        \"backdrop_path\": \"/4w7BJ1r8ovi1PAoFrpfIJYhfacm.jpg\",\n        \"description\": \"Ten lost souls slip in and out of one another's arms in a daisy-chained musical exploration of love's bittersweet embrace. A film adaptation of Michael John LaChiusa's celebrated musical, originally based on Arthur Schnitzler's play, La Ronde.\",\n        \"genre_ids\": {\n            \"0\": \"18\",\n            \"1\": \"10402\",\n            \"2\": \"10749\"\n        },\n        \"vote_average\": \"5.4\"\n    },\n    {\n        \"imageUrl\": \"/bHHt3HIr7MpYiRSw1XNxZm3B3cn.jpg\",\n        \"name\": \"Hello Again\",\n        \"release_date\": \"2017-11-08\",\n        \"original_language\": \"en\",\n        \"id\": \"446289\",\n        \"backdrop_path\": \"/4w7BJ1r8ovi1PAoFrpfIJYhfacm.jpg\",\n        \"description\": \"Ten lost souls slip in and out of one another's arms in a daisy-chained musical exploration of love's bittersweet embrace. A film adaptation of Michael John LaChiusa's celebrated musical, originally based on Arthur Schnitzler's play, La Ronde.\",\n        \"genre_ids\": {\n            \"0\": \"18\",\n            \"1\": \"10402\",\n            \"2\": \"10749\"\n        },\n        \"vote_average\": \"5.4\"\n    },\n    ],\n    createdAt: \"2021-07-20T01:35:09.125Z\",\n    likeCount: 0,\n    commentCount: 0 \n};\n\nclass PostList extends Component {\n    \n    state = {\n        open: false,\n        body: '',\n        errors: {}\n    };\n    componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            })\n        };\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\n            this.setState({\n                body: '',\n                open:false, \n                errors:{}\n            });\n        }\n    }\n    handleOpen = () => {\n        this.setState({open:true});\n    }\n    handleClose = () => {\n        this.setState({open:false, errors:{}});\n        this.props.clearErrors();\n    }\n    handleChange = (event) => {\n        this.setState({[event.target.name]:event.target.value})\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.postList(dummyObject);    \n    }\n    render(){\n        const {errors} = this.state;\n        const {classes, UI: {loading}} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Post a List\" onClick={this.handleOpen}>\n                    <AddIcon/>\n                </MyButton>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\"\n                >\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon/>\n                    </MyButton>\n                    <DialogTitle>\n                        Post a new list\n                    </DialogTitle>\n                    <DialogContent>\n                        <form onSubmit={this.handleSubmit}>\n                            <TextField\n                            name=\"title\"\n                            type=\"text\"\n                            label=\"Title\"\n                            placeholder=\"Top Movies\"\n                            //NOT SURE ABOUT THIS BELOW\n                            error={errors.body ? true: false}\n                            helperText={errors.body}\n                            className={classes.textField}\n                            onChange={this.handleChange}\n                            fullWidth\n                            />\n                            <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            color=\"primary\"\n                            className={classes.submitButton}\n                            disabled={loading}>\n                                Submit\n                               {loading && (<CircularProgress size={30} className={classes.progressSpinner}/>) }\n                            </Button>\n                        </form>\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n\n}\n\nPostList.propTypes = ({\n    postList: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n});\n\nconst mapStateToProps = (state) =>({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {postList, clearErrors})(withStyles(styles)(PostList));\n","/Users/suli/Desktop/critic-master/critic-client/src/components/ListDialog.js",["119","120","121","122","123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":1,"nodeType":"131","endLine":99,"endColumn":4},{"ruleId":"132","severity":1,"message":"133","line":12,"column":10,"nodeType":"134","messageId":"135","endLine":12,"endColumn":17},{"ruleId":"132","severity":1,"message":"136","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"137","line":25,"column":10,"nodeType":"134","messageId":"135","endLine":25,"endColumn":20},{"ruleId":"132","severity":1,"message":"138","line":26,"column":8,"nodeType":"134","messageId":"135","endLine":26,"endColumn":12},{"ruleId":"132","severity":1,"message":"139","line":29,"column":8,"nodeType":"134","messageId":"135","endLine":29,"endColumn":16},{"ruleId":"132","severity":1,"message":"140","line":40,"column":10,"nodeType":"134","messageId":"135","endLine":40,"endColumn":15},{"ruleId":"132","severity":1,"message":"141","line":164,"column":9,"nodeType":"134","messageId":"135","endLine":164,"endColumn":18},{"ruleId":"129","severity":1,"message":"142","line":13,"column":3,"nodeType":"131","endLine":40,"endColumn":4},{"ruleId":"129","severity":1,"message":"142","line":18,"column":3,"nodeType":"131","endLine":57,"endColumn":4},{"ruleId":"129","severity":1,"message":"142","line":17,"column":1,"nodeType":"131","endLine":59,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":17},{"ruleId":"129","severity":1,"message":"143","line":6,"column":1,"nodeType":"131","endLine":12,"endColumn":3},{"ruleId":"132","severity":1,"message":"144","line":6,"column":5,"nodeType":"134","messageId":"135","endLine":6,"endColumn":17},{"ruleId":"132","severity":1,"message":"145","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":21},{"ruleId":"132","severity":1,"message":"145","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":21},{"ruleId":"132","severity":1,"message":"146","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":19},{"ruleId":"132","severity":1,"message":"147","line":58,"column":32,"nodeType":"134","messageId":"135","endLine":58,"endColumn":38},{"ruleId":"132","severity":1,"message":"148","line":58,"column":40,"nodeType":"134","messageId":"135","endLine":58,"endColumn":49},{"ruleId":"132","severity":1,"message":"149","line":58,"column":62,"nodeType":"134","messageId":"135","endLine":58,"endColumn":71},{"ruleId":"132","severity":1,"message":"150","line":58,"column":73,"nodeType":"134","messageId":"135","endLine":58,"endColumn":85},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'makeStyles' is defined but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'color' is defined but never used.","'userImage' is assigned a value but never used.","Unexpected default export of anonymous function","Assign arrow function to a variable before exporting as module default","'LOADING_USER' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'listId' is assigned a value but never used.","'movieList' is assigned a value but never used.","'likeCount' is assigned a value but never used.","'commentCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]