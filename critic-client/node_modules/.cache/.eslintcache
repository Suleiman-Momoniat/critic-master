[{"/Users/suli/Desktop/critic-master/critic-client/src/index.js":"1","/Users/suli/Desktop/critic-master/critic-client/src/App.js":"2","/Users/suli/Desktop/critic-master/critic-client/src/reportWebVitals.js":"3","/Users/suli/Desktop/critic-master/critic-client/src/util/theme.js":"4","/Users/suli/Desktop/critic-master/critic-client/src/pages/home.js":"5","/Users/suli/Desktop/critic-master/critic-client/src/util/AuthRoute.js":"6","/Users/suli/Desktop/critic-master/critic-client/src/redux/store.js":"7","/Users/suli/Desktop/critic-master/critic-client/src/pages/signup.js":"8","/Users/suli/Desktop/critic-master/critic-client/src/pages/login.js":"9","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/uiReducer.js":"10","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/userReducer.js":"11","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/dataReducer.js":"12","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js":"13","/Users/suli/Desktop/critic-master/critic-client/src/redux/types.js":"14","/Users/suli/Desktop/critic-master/critic-client/src/util/MyButton.js":"15","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/dataActions.js":"16","/Users/suli/Desktop/critic-master/critic-client/src/components/profile/Profile.js":"17","/Users/suli/Desktop/critic-master/critic-client/src/components/profile/EditDetails.js":"18","/Users/suli/Desktop/critic-master/critic-client/src/components/list/PostList.js":"19","/Users/suli/Desktop/critic-master/critic-client/src/components/layout/Navbar.js":"20","/Users/suli/Desktop/critic-master/critic-client/src/components/list/List.js":"21","/Users/suli/Desktop/critic-master/critic-client/src/components/list/ListDialog.js":"22","/Users/suli/Desktop/critic-master/critic-client/src/components/list/LikeButton.js":"23","/Users/suli/Desktop/critic-master/critic-client/src/components/list/Comments.js":"24","/Users/suli/Desktop/critic-master/critic-client/src/components/list/DeleteList.js":"25","/Users/suli/Desktop/critic-master/critic-client/src/components/list/CommentForm.js":"26","/Users/suli/Desktop/critic-master/critic-client/src/pages/user.js":"27","/Users/suli/Desktop/critic-master/critic-client/src/components/profile/StaticProfile.js":"28","/Users/suli/Desktop/critic-master/critic-client/src/components/layout/Notifications.js":"29","/Users/suli/Desktop/critic-master/critic-client/src/util/ListSkeleton.js":"30","/Users/suli/Desktop/critic-master/critic-client/src/util/ProfileSkeleton.js":"31","/Users/suli/Desktop/critic-master/critic-client/src/components/list/SearchBar.js":"32","/Users/suli/Desktop/critic-master/critic-client/src/pages/profile.js":"33"},{"size":478,"mtime":1628144683906,"results":"34","hashOfConfig":"35"},{"size":2507,"mtime":1633637923177,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1628144016176,"results":"37","hashOfConfig":"35"},{"size":2041,"mtime":1634748694720,"results":"38","hashOfConfig":"35"},{"size":1332,"mtime":1634749060099,"results":"39","hashOfConfig":"35"},{"size":597,"mtime":1632334033458,"results":"40","hashOfConfig":"35"},{"size":739,"mtime":1628266576817,"results":"41","hashOfConfig":"35"},{"size":5746,"mtime":1628706578022,"results":"42","hashOfConfig":"35"},{"size":4562,"mtime":1629994201878,"results":"43","hashOfConfig":"35"},{"size":752,"mtime":1629480836509,"results":"44","hashOfConfig":"35"},{"size":1442,"mtime":1632337188441,"results":"45","hashOfConfig":"35"},{"size":1791,"mtime":1631465072836,"results":"46","hashOfConfig":"35"},{"size":2558,"mtime":1632338691063,"results":"47","hashOfConfig":"35"},{"size":822,"mtime":1632336974823,"results":"48","hashOfConfig":"35"},{"size":388,"mtime":1629139802965,"results":"49","hashOfConfig":"35"},{"size":3054,"mtime":1632830286954,"results":"50","hashOfConfig":"35"},{"size":6020,"mtime":1632340632748,"results":"51","hashOfConfig":"35"},{"size":4708,"mtime":1629994286241,"results":"52","hashOfConfig":"35"},{"size":11970,"mtime":1633878166771,"results":"53","hashOfConfig":"35"},{"size":2292,"mtime":1634749596977,"results":"54","hashOfConfig":"35"},{"size":7885,"mtime":1634749374471,"results":"55","hashOfConfig":"35"},{"size":5890,"mtime":1634748406297,"results":"56","hashOfConfig":"35"},{"size":1776,"mtime":1629994143628,"results":"57","hashOfConfig":"35"},{"size":3223,"mtime":1629996335681,"results":"58","hashOfConfig":"35"},{"size":2369,"mtime":1629993793398,"results":"59","hashOfConfig":"35"},{"size":2773,"mtime":1631466901750,"results":"60","hashOfConfig":"35"},{"size":2362,"mtime":1632340562646,"results":"61","hashOfConfig":"35"},{"size":3052,"mtime":1631468507753,"results":"62","hashOfConfig":"35"},{"size":4558,"mtime":1632339016052,"results":"63","hashOfConfig":"35"},{"size":1987,"mtime":1632340415092,"results":"64","hashOfConfig":"35"},{"size":2555,"mtime":1632341605966,"results":"65","hashOfConfig":"35"},{"size":6716,"mtime":1633116504740,"results":"66","hashOfConfig":"35"},{"size":1373,"mtime":1632851600819,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1gguv7k",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},"/Users/suli/Desktop/critic-master/critic-client/src/index.js",[],["147","148"],"/Users/suli/Desktop/critic-master/critic-client/src/App.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/reportWebVitals.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/theme.js",["149"],"export default {\n    palette: {\n      primary: {\n        light: '#33c9dc',\n        main:'#212121',\n        dark:'#008394',\n        contrastText:'#fff'\n      },\n      secondary: {\n        light: '#ff6333',\n        main:'#ff3d00',\n        dark:'#b22a00',\n        contrastText:'#fff'\n      }\n    },\n    typography: {\n      useNextVariants: true,\n    }, \n\n      spreadThis: {form: {\n        textAlign: 'center'\n      },\n      image: {\n        margin: '20px auto 20px auto'\n      },\n      pageTitle: {\n        margin: '10px auto 10px auto'\n      },\n      textField: {\n        margin: '10px auto 10px auto'\n      },\n      button: {\n        marginTop: 20,\n        position: 'relative'\n      },\n      customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n      },\n      progress: {\n        position: 'absolute'\n      },\n      invisibleSeparator: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n      },\n      paper: {\n        padding: 20\n      },\n      profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: '#00bcd4'\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      }\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/pages/home.js",["150"],"import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\n\nimport List from '../components/list/List';\nimport Profile from '../components/profile/Profile';\nimport ListSkeleton from '../util/ListSkeleton';\n\nimport {connect} from 'react-redux';\nimport {getLists} from '../redux/actions/dataActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis,\n    home: {\n        backgroundColor: '#121212'\n    }\n});\n\nclass home extends Component {\n    componentDidMount(){\n        this.props.getLists();\n    }\n    render() {\n        const { classes } = this.props;\n        const { lists, loading} = this.props.data;\n        let recentListsMarkup = !loading ? (\n            lists.map(list => <List key={list.listId} list={list} />)\n        ):(\n            <ListSkeleton/>\n            );\n        return (\n            <div className={classes.home}>\n                {recentListsMarkup}\n            </div>\n        );\n    }\n}\n\nhome.propTypes = {\n    getLists: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getLists})(withStyles(styles)(home));\n\n// export default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","/Users/suli/Desktop/critic-master/critic-client/src/util/AuthRoute.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/store.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/pages/signup.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/pages/login.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/uiReducer.js",["151"],"import {\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    STOP_LOADING_UI\n  } from '../types';\n  \n  const initialState = {\n    loading: false,\n    errors: null\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: action.payload\n        };\n      case CLEAR_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: null\n        };\n      case LOADING_UI:\n        return {\n          ...state,\n          loading: true\n        };\n      case STOP_LOADING_UI:\n        return {\n          ...state,\n          loading: false\n        };\n      default:\n        return state;\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/userReducer.js",["152"],"import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_LIST,\n    UNLIKE_LIST,\n    MARK_NOTIFICATIONS_READ\n  } from '../types';\n  \n  const initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case LIKE_LIST:\n        return {\n          ...state,\n          likes: [\n            ...state.likes,\n            {\n              userHandle:state.credentials.userHandle,\n              listId: action.payload.listId\n            }\n          ]\n        }\n        case UNLIKE_LIST:\n        return {\n          ...state,\n          likes: state.likes.filter(like => like.listId !== action.payload.listId)\n        }\n        case MARK_NOTIFICATIONS_READ:\n            state.notification.forEach(notification => notification.read = true);\n            return {\n              ...state\n            } \n          \n      default:\n        return state;\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/dataReducer.js",["153"],"import { \n    SET_LISTS, \n    LIKE_LIST, \n    UNLIKE_LIST, \n    LOADING_DATA, \n    DELETE_LIST,\n    POST_LIST,\n    SET_LIST,\n    SUBMIT_COMMENT\n} from \"../types\";\n\nconst initialState = {\n    lists: [],\n    list: {},\n    loading: false,\n};\n\nexport default function(state= initialState, action){\n    switch(action.type){\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_LISTS:\n            return {\n                ...state,\n                lists: action.payload,\n                loading: false\n            };\n        case SET_LIST:\n            return {\n                ...state,\n                list: action.payload,\n            };\n        case LIKE_LIST:\n        case UNLIKE_LIST:\n            let index = state.lists.findIndex((list)=>list.listId === action.payload.listId);\n            state.lists[index] = action.payload;\n            if(state.list.listId === action.payload.listId){\n                state.list = action.payload;\n            }\n            return {\n                ...state,\n            };\n        case DELETE_LIST:\n            index = state.lists.findIndex(list => list.listId === action.payload);\n            state.lists.splice(index, 1);\n            return {\n                ...state\n            }\n        case POST_LIST:\n            return {\n                ...state,\n                lists: [\n                    action.payload,\n                    ...state.lists\n                ]\n            }\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                list: {\n                    ...state.list,\n                    comments: [action.payload, ...state.list.comments]\n                }\n            }\n        default: \n        return state;\n        }\n}","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/types.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/MyButton.js",["154"],"import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\n  <Tooltip title={tip} className={tipClassName} placement=\"bottom\">\n    <IconButton onClick={onClick} className={btnClassName}>\n      {children}\n    </IconButton>\n  </Tooltip>\n);","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/dataActions.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/profile/Profile.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/profile/EditDetails.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/list/PostList.js",["155","156","157"],"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n//Icons\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\n\n//Redux stuff\nimport { connect } from 'react-redux';\nimport { postList, clearErrors } from '../../redux/actions/dataActions';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\n\n\nconst api_key = 'efe3d1c418342122bfb294bd355b5f96';\n\nconst styles = theme => ({\n    //...theme,\n    submitButton: {\n        position: 'relative',\n        float: \"right\",\n        marginTop: 10\n    },\n    progressSpinner: {\n        position: 'absolute'\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '91%',\n        top: '6%'\n    },\n    searchMovieTile: {\n        display: 'flex',\n        // float: 'left',\n    },\n});\n\nclass PostList extends Component {\n\n    state = {\n        open: false,\n        body: \"\",\n        errors: {},\n        searchTerm: \"\",\n        theMovieFilter: \"\",\n        filterAll: false,\n        isLoading: true,\n        searchError: \"No Movies Found\",\n        searchResults: [],\n        listBeingCreated: [],\n        listDescription: \"\",\n        listTitle: \"\"\n    };\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            })\n        };\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: '',\n                open: false,\n                errors: {}\n            });\n        }\n    }\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false, errors: {} });\n        this.props.clearErrors();\n    }\n    handleChange = (event) => {\n        console.log('event.target.name', event.target.id)\n        this.setState({ [event.target.id]: event.target.value })\n    }\n\n    filterBySearchTerm = (search) => {\n        this.setState({\n            theLocationFilter: search,\n        })\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${this.state.searchTerm}&page=1&include_adult=false`)\n            // .then(res => {\n            //     const listOfMovies = res.data.results;\n            //     console.log('list: ', listOfMovies);\n            // })\n            // .catch(err=>console.log(err))\n            .then(newsearchResults => {\n                console.log(this.state.searchResults);\n                const listOfMovies = newsearchResults.data.results;\n                this.setState({\n                    searchResults: listOfMovies\n                });\n                console.log('list: ', listOfMovies);\n                if (listOfMovies.length > 0) {\n                    this.setState({\n                        searchTerm: search,\n                        filterAll: false,\n                        searchResults: listOfMovies,\n                        isLoading: false\n                    });\n                    // console.log(this.state.searchResults);\n                }\n                else {\n                    this.setState({\n                        theMovieFilter: search,\n                        filterAll: false,\n                        isLoading: false,\n                        searchError: \"No Movies Found\"\n                    })\n                }\n            })\n    }\n    doingASearch = async (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    submitSearch = async (event) => {\n        event.preventDefault();\n        this.filterBySearchTerm(this.state.searchTerm)\n        this.setState({\n            searchTerm: \"\"\n        })\n    }\n    clearInput = () => {\n        this.setState({\n            searchTerm: \"\",\n            searchResults: []\n        })\n    }\n    pushToList = (movie) => {\n        //Making sure no duplicate movies added\n        console.log(this.state.listBeingCreated.some(m => m.title === movie.title));\n        if (this.state.listBeingCreated.some(m => m.title === movie.title) === false) {\n            this.setState(prevState => ({\n                listBeingCreated: [...prevState.listBeingCreated, movie]\n            }));\n            console.log(`State: ${this.state.listBeingCreated}`);\n            this.setState(prevState => ({\n                searchResults: [],\n                searchTerm: \"\"\n            }));\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const ObjectToSubmit = {\n            movieList: this.state.listBeingCreated,\n            listTitle: this.state.listTitle,\n            listDescription: this.state.listDescription,\n            userHandle: 'user',\n            createdAt: new Date(),\n            likeCount: 0,\n            commentCount: 0\n        };\n        console.log(`Submitting: ${ObjectToSubmit}`);\n        console.log(ObjectToSubmit);\n        this.props.postList(ObjectToSubmit);\n        this.setState({\n            listBeingCreated: [],\n        })\n    }\n\n    render() {\n        const { errors } = this.state;\n        const { classes, UI: { loading } } = this.props;\n        let itemsInList = this.state.listBeingCreated.length > 0 ? this.state.listBeingCreated.map((item, index) => {\n            //console.log(item);\n            return (<div>\n                <p># {index + 1}</p>\n                <img src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\" />\n                {item.title}\n            </div>)\n        }) : (\n            null\n        );\n        return (\n            <Fragment>\n                <MyButton tip=\"Post a List\" onClick={this.handleOpen}>\n                    <AddIcon />\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon />\n                    </MyButton>\n                    <DialogTitle>\n                        Create a New List\n                    </DialogTitle>\n                    <DialogContent>\n                        {/* onSubmit={this.handleSubmit} */}\n                        {/* <form> */}\n                            <Input\n                                id=\"listTitle\"\n                                name=\"listTitle\"\n                                type=\"text\"\n                                label=\"Give your list a title\"\n                                placeholder=\"List Name\"\n                                onChange={this.handleChange}\n\n                                //NOT SURE ABOUT THIS BELOW\n                                // error={errors.body ? true: false}\n                                // helperText={errors.body}\n                                className={classes.textField}\n                                fullWidth\n                            />\n\n                            <Input\n                                    id=\"listDescription\"\n                                    fullWidth\n                                    placeholder=\"Description\"\n                                    value={this.state.listDescription}\n                                    onChange={this.handleChange}\n                                    multiline\n                                    rows={4}\n                                />\n                            <label htmlFor=\"searchTerm\">\n                                {/* Showing the list */}\n                                {\n                                    this.state.listBeingCreated.length > 0 ? (\n                                        <div>\n                                            {itemsInList}\n                                        </div>\n                                    ) : (\n                                        null\n                                    )\n                                }\n\n                                \n\n                                <form onSubmit={this.submitSearch}>\n                                <Input\n                                    id=\"searchTerm\"\n                                    fullWidth\n                                    placeholder=\"Search for movie to add...\"\n                                    // onSubmit={this.submitSearch}\n                                    // onInput={this.submitSearch}\n                                    value={this.state.searchTerm}\n                                    onChange={this.handleChange}\n                                    endAdornment={\n                                        <InputAdornment position='end'>\n                                            <IconButton onClick={this.submitSearch}>\n                                                {this.state.searchResults.length === 0 ? (\n                                                    <SearchIcon />\n                                                ) : (\n                                                    <CloseIcon id=\"clearBtn\" onClick={this.clearInput} />\n                                                )}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    } \n                                />\n                                </form>\n\n\n\n                                {this.state.searchResults.length > 0 ? this.state.searchResults.map(movie => (\n                                    <div className={classes.searchMovieTile} onClick={() => this.pushToList(movie)} >\n                                        <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\" />\n                                        {movie.title}\n                                    </div>\n                                ))\n\n                                    :\n                                    null\n                                }\n                                {/* {this.state.searchResults.forEach((searchResult)=>{\n                    searchResult.onClick = this.pushToList(searchResult);\n                })} */}\n                            </label>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submitButton}\n                                disabled={loading}\n                                onClick={this.handleSubmit}\n                                >\n                                Submit\n                                {loading && (<CircularProgress size={30} className={classes.progressSpinner} />)}\n                            </Button>\n                        {/* </form> */}\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n\n}\n\nPostList.propTypes = ({\n    postList: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n});\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, { postList, clearErrors })(withStyles(styles)(PostList));\n","/Users/suli/Desktop/critic-master/critic-client/src/components/layout/Navbar.js",["158"],"import React, { Component, Fragment } from 'react'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes  from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport PostList from '../list/PostList';\nimport Notifications from './Notifications';\n\n// Material UI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Tooltip } from '@material-ui/core';\n\n//Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ProfileIcon from '@material-ui/icons/Person';\n\nclass Navbar extends Component {\n    render() {\n        const {authenticated} = this.props;\n        return (\n            <AppBar \n            color='primary'\n            sx={{\n                height: '50px'\n            }}\n            >\n                <Toolbar className=\"nav-container\">\n                    {authenticated ? \n                    (\n                        <Fragment>\n                            <PostList />\n                            <Link to='/'>\n                                <MyButton tip=\"Home\">\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>   \n                            <Link to='/profile'>\n                                <MyButton tip=\"Profile\">\n                                    <ProfileIcon/>\n                                </MyButton>\n                            </Link>  \n\n                            <Notifications/>\n                        </Fragment>\n                    )\n                    :\n                    (\n                        <Fragment>\n                        <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/\" >Home</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\n                        </Fragment>\n\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","/Users/suli/Desktop/critic-master/critic-client/src/components/list/List.js",["159","160","161","162"],"import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteList from './DeleteList';\nimport ListDialog from './ListDialog';\nimport LikeButton from './LikeButton';\n\n// MUI Stuff\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { likeList, unlikeList } from '../../redux/actions/dataActions';\n\n//Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\n\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport './List.scss';\n\nconst styles = {\n  card: {\n    margin: '20px 40px',\n    padding: '30px',\n    overflowY: 'scroll',\n    backgroundColor: '#bbbbbb'\n  },\n  listItems: {\n    height: '300px',\n    overflowY: 'auto',\n    whiteSpace: 'nowrap',\n    objectFit: 'cover',\n  },\n  media: {\n    width: '300px',\n    height: '300px',\n    paddingTop: '56.25%',\n    textAlign: 'center',\n\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  body: {\n    backgroundColor: 'lightgray',\n  },\n}\n\nclass List extends Component {\n\n  render() {\n    dayjs.extend(relativeTime);\n\n    const {\n      classes,\n      list: {\n        movieList,\n        createdAt,\n        userImage,\n        userHandle,\n        listId,\n        likeCount,\n        commentCount,\n        listTitle,\n        listDescription\n      },\n      user: {\n        authenticated, credentials: { handle }\n      }\n    } = this.props;\n\n    const deleteButton = authenticated && userHandle === handle ? (\n      <DeleteList listId={listId} />\n    ) : null\n\n    let listOfImages = [];\n    const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n    movieList.forEach((movie, index, arr) => {\n      listOfImages.push(\n        <div>\n          <div className=\"movie_card\" id=\"bright\">\n            <div className=\"info_section\">\n              <div className=\"movie_header\">\n                <img className=\"locandina\" src={movie.imageUrl ? baseUrl + movie.imageUrl : baseUrl + movie.poster_path} alt={movie.title} />\n                <h1>{movie.title}</h1>\n                <h4>{movie.release_date}</h4>\n                <span class=\"minutes\">117 min</span>\n                <p className=\"type\">Action, Crime, Fantasy</p>\n                {/* <p class=\"type\">{movie.genre_ids}</p> */}\n              </div>\n              <div className=\"movie_desc\">\n                <p className=\"text\">\n                  {movie.overview}\n                </p>\n                <hr />\n                <p className=\"text\">Rank {arr.length - index}</p>\n                <hr />\n                <p className=\"text\">Rating: {movie.vote_average} / 10</p>\n              </div>\n              {/* <div className=\"movie_social\">\n      <ul>\n        <li><i className=\"material-icons\">Rank {arr.length - index}</i></li>\n         {/* <li><i class=\"material-icons\"></i></li> \n        <li><i class=\"material-icons\">Rating: {movie.vote_average} / 10</i></li>\n      </ul>\n    </div> */}\n            </div>\n            <div className=\"blur_back\" style={{ background: `url(${movie.backdrop_path ? baseUrl + movie.backdrop_path : baseUrl + movie.imageUrl})` }} ></div>\n          </div>\n        </div>\n      );\n\n    });\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              <img src={userImage} alt='Profile Picture' width='60' />\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n            </IconButton>\n          }\n          title={<Typography\n            variant=\"h5\"\n            component={Link}\n            to={`/users/${userHandle}`}\n            color=\"primary\"\n          >\n            {userHandle}\n          </Typography>}\n\n          subheader={dayjs(createdAt).fromNow()}\n        />\n        <div className='listTitle'>\n          <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n            {listTitle || \"Top Movies\"}\n          </Typography>\n        </div>\n        <hr />\n\n        {deleteButton}\n\n        <div className={classes.listItems}>\n          {listOfImages}\n        </div>\n        <hr />\n        <CardContent>\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {listDescription || \"List Description\"}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n          </IconButton>\n          <IconButton aria-label=\"share\">\n          </IconButton>\n          <LikeButton listId={listId} />\n          <span>{likeCount} {likeCount === 1 ? 'Like' : 'Likes'}</span>\n          <MyButton tip=\"comments\">\n            {/* <ChatIcon color='primary' /> */}\n            <ListDialog listId={listId} userHandle={userHandle} openDialog={this.props.openDialog} />\n          </MyButton>\n          <span>{commentCount} {commentCount === 1 ? 'Comment' : 'Comments'}</span>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nList.propTypes = {\n  likeList: PropTypes.func.isRequired,\n  unlikeList: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  list: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeList,\n  unlikeList\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(List));\n\n// export class List extends Component {\n\n//     render() {\n\n//         const { classes, \n//             list : {movieList, \n//                 createdAt, \n//                 userImage, \n//                 userHandle, \n//                 listId, \n//                 likeCount, \n//                 commentCount} \n//             } = this.props;\n\n//         return (\n//             <Card className={classes.card}>\n//                 <CardContent className={classes.content}>\n//                     <Typography \n//                     variant=\"h5\" \n//                     component={Link} \n//                     to={`/users/${userHandle}`}\n//                     color=\"primary\"\n//                     >\n//                         {userHandle}\n//                     </Typography>\n\n//                     <Typography \n//                     variant=\"body2\" \n//                     color=\"textSecondary\"\n//                     >\n//                         {createdAt}\n//                     </Typography>\n\n\n//                     <CardMedia\n//                         image={userImage}\n//                         title=\"Profile Image\"\n//                         className={classes.image}\n//                         />\n\n\n//                     {/* <Typography variant=\"body1\">{movieList.toString()}</Typography> */}\n\n\n//                 </CardContent>\n//                 <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n// <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n// <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n//             </Card>\n//         )\n//     }\n// }\n\n// export default withStyles(useStyles)(List);\n","/Users/suli/Desktop/critic-master/critic-client/src/components/list/ListDialog.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/list/LikeButton.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/list/Comments.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/list/DeleteList.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/list/CommentForm.js",["163"],"import React, { Component } from 'react'\nimport PropTypes  from 'prop-types';\nimport withStyles  from '@material-ui/styles/withStyles';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport { clearErrors, submitComment } from '../../redux/actions/dataActions';\n\n//MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles= theme => ({\n   // ...theme\n});\n\nclass CommentForm extends Component {\n    state = {\n        body: '',\n        errors: {}\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        };\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\n            this.setState({\n                body: ''\n            })\n        }\n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleSubmit = (event)=>{\n        event.preventDefault();\n        this.props.submitComment(this.props.listId, {body: this.state.body});\n    }\n    render() {\n        const {classes, authenticated} = this.props;\n        const errors = this.state.errors;\n\n        const commentFormMarkup = authenticated ? \n        (\n            <Grid item sm={12} style={{textAlign: 'center'}}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name=\"body\"\n                        type=\"text\"\n                        label=\"Add comment...\"\n                        error={errors.comment ? true : false}\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        fullWidth\n                        className={classes.TextField}\n                    />\n                    <Button \n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        >Submit</Button>\n                </form>\n                <hr className={classes.visibleSeperator}/>\n            </Grid>\n        )\n        :\n        null;\n\n        return commentFormMarkup;\n    }\n}\n\nCommentForm.propTypes = {\n    submitComment: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    listId: PropTypes.string.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n\n};\n\nconst mapStateToProps = state =>({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));\n","/Users/suli/Desktop/critic-master/critic-client/src/pages/user.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/profile/StaticProfile.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/layout/Notifications.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/ListSkeleton.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/ProfileSkeleton.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/list/SearchBar.js",["164","165","166","167"],"import React from 'react';\nimport axios from 'axios';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { postList, clearErrors} from '../../redux/actions/dataActions';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport TextField from '@material-ui/core/TextField';\nimport { yellow } from '@material-ui/core/colors';\n\n\n\nconst api_key='efe3d1c418342122bfb294bd355b5f96';\n\nconst styles = theme => ({\n    searchMovieTile: {\n        display: 'flex',\n        // float: 'left',\n    },\n    submitButton: {\n        position: 'relative',\n        float: \"right\",\n        marginTop: 10\n    },\n});\n\nclass SearchBar extends React.Component{\n    state={\n        searchTerm: \"\",\n        theMovieFilter: \"\",\n        filterAll: false,\n        isLoading: true,\n        searchError: \"No Movies Found\",\n        searchResults: [],\n        listBeingCreated: []\n    }\n    filterBySearchTerm=(search)=>{\n        this.setState({\n            theLocationFilter: search,\n        })\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${this.state.searchTerm}&page=1&include_adult=false`)\n            // .then(res => {\n            //     const listOfMovies = res.data.results;\n            //     console.log('list: ', listOfMovies);\n            // })\n            // .catch(err=>console.log(err))\n        .then(newsearchResults=>{\n            console.log(this.state.searchResults);\n            const listOfMovies = newsearchResults.data.results;\n            this.setState({\n                searchResults: listOfMovies\n            });\n            console.log('list: ', listOfMovies);\n        if(listOfMovies.length>0){\n        this.setState({\n            searchTerm: search,\n            filterAll: false,\n            searchResults: listOfMovies,\n            isLoading: false\n        });\n        console.log(this.state.searchResults);\n        }\n        else{\n        this.setState({\n            theMovieFilter: search,\n            filterAll: false,\n            isLoading: false,\n            searchError: \"No Movies Found\"\n        })\n        }\n        })\n        }\n    doingASearch=async (event)=>{\n        this.setState({\n        [event.target.name]: event.target.value\n    })\n    }\n    submitSearch= async (event)=>{\n        event.preventDefault();\n        this.filterBySearchTerm(this.state.searchTerm)\n        this.setState({\n            searchTerm: \"\"\n        })\n    }\n    clearInput = () =>{\n        this.setState({\n            searchTerm:\"\",\n            searchResults:[]\n        })\n    }\n    pushToList = (movie) =>{\n        \n        // if(this.state.listBeingCreated.some(m => m.title === movie.title).length === 0){\n        //     this.setState(prevState => ({\n        //         listBeingCreated: [...prevState.listBeingCreated, movie]\n        //     }));\n        //     console.log(`State: ${this.state.listBeingCreated}`);\n        // }\n    }\n    handleSubmit = (event) => {\n        //event.preventDefault();\n        \n        const ObjectToSubmit = {\n            movieList: this.state.listBeingCreated,\n            userHandle: 'user',\n            createdAt: new Date(),\n            likeCount: 0,\n            commentCount: 0 \n         }\n         console.log(`Submitting: ${ObjectToSubmit}`)\n        this.props.postList(ObjectToSubmit); \n        this.setState({\n            listBeingCreated: [],\n        })\n         \n    }\n    render(){\n        const {errors} = this.state;\n        const {classes, UI: {loading}} = this.props;\n        let itemsInList = this.state.listBeingCreated.length > 0 ?  this.state.listBeingCreated.map((item, index) => {\n            //console.log(item);\n                        return (<div>\n                <p># {index+1}</p>\n                <img src={`https://image.tmdb.org/t/p/w500/${item.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\"/>\n                {item.title} \n            </div>   )    \n        }):(\n            null\n        );   \n        return(\n            <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"searchTerm\">\n                {/* <TextField id=\"standard-basic\" label=\"Movie\" variant=\"standard\" /> */}\n                {\n                    this.state.listBeingCreated.length > 0 ? (\n                        <div>\n                           {itemsInList} \n                        </div>\n                    ) : (\n                        null\n                    )\n                }\n                <input type=\"text\" name=\"searchTerm\" value={this.state.searchTerm} onChange={this.doingASearch} placeholder=\"Movie\" />\n                <button onClick={this.submitSearch}>Search</button>\n\n                <div className=\"searchIcon\">\n                {this.state.searchResults.length === 0 ? (\n                    <SearchIcon />\n                ) : (\n                    <CloseIcon id=\"clearBtn\" onClick={this.clearInput} />\n                )}\n                </div>\n                {/* <input type=\"submit\" value=\"submit\"/> */}\n                {this.state.searchResults.length > 0 ? this.state.searchResults.map(movie => (\n                    // <ul key={movie.title}>\n                        <div className={classes.searchMovieTile} onClick={()=> this.pushToList(movie)} >\n                            <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt=\"Movie Poster\" width=\"100px\"/>\n                            {movie.title}\n                        </div>\n                    // </ul>\n                ))\n            \n                :\n                    null\n                }\n                {/* {this.state.searchResults.forEach((searchResult)=>{\n                    searchResult.onClick = this.pushToList(searchResult);\n                })} */}\n            </label>\n            <Button \n                type=\"submit\" \n                variant=\"contained\" \n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}>\n                    Submit\n                {loading && (<CircularProgress size={30} className={classes.progressSpinner}/>) }\n            </Button>\n            </form>\n            \n        )\n        }\n    }\n\nSearchBar.propTypes = ({\n    postList: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n});\n\nconst mapStateToProps = (state) =>({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {postList, clearErrors})(withStyles(styles)(SearchBar));\n","/Users/suli/Desktop/critic-master/critic-client/src/pages/profile.js",["168","169"],"import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { PropTypes } from 'prop-types';\n\nimport List from '../components/list/List';\nimport Profile from '../components/profile/Profile';\nimport ListSkeleton from '../util/ListSkeleton';\n\nimport {connect} from 'react-redux';\nimport {getLists} from '../redux/actions/dataActions';\n\nclass profile extends Component {\n    componentDidMount(){\n        this.props.getLists();\n    }\n    render() {\n        const { lists, loading} = this.props.data;\n        let recentListsMarkup = !loading ? (\n            lists.map(list => <List key={list.listId} list={list} />)\n        ):(\n            <ListSkeleton/>\n            );\n        return (\n            <Profile />\n            // <Grid container spacing={16}>\n            //     <Grid item sm={7} xs={12}>\n            //         {recentListsMarkup}\n            //     </Grid>\n            //     <Grid item sm={1} xs={12}>\n                    \n            //     </Grid>\n            //     <Grid item sm={4} xs={12}>\n            //         <Profile />\n            //     </Grid>\n            // </Grid> \n        );\n    }\n}\n\nprofile.propTypes = {\n    getLists: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getLists})(profile);\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":1,"nodeType":"176","endLine":99,"endColumn":4},{"ruleId":"177","severity":1,"message":"178","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":15},{"ruleId":"174","severity":1,"message":"181","line":13,"column":3,"nodeType":"176","endLine":40,"endColumn":4},{"ruleId":"174","severity":1,"message":"181","line":19,"column":3,"nodeType":"176","endLine":64,"endColumn":4},{"ruleId":"174","severity":1,"message":"181","line":18,"column":1,"nodeType":"176","endLine":71,"endColumn":2},{"ruleId":"174","severity":1,"message":"182","line":6,"column":1,"nodeType":"176","endLine":12,"endColumn":3},{"ruleId":"177","severity":1,"message":"183","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":17},{"ruleId":"177","severity":1,"message":"184","line":28,"column":8,"nodeType":"179","messageId":"180","endLine":28,"endColumn":17},{"ruleId":"177","severity":1,"message":"185","line":186,"column":17,"nodeType":"179","messageId":"180","endLine":186,"endColumn":23},{"ruleId":"177","severity":1,"message":"186","line":13,"column":10,"nodeType":"179","messageId":"180","endLine":13,"endColumn":17},{"ruleId":"177","severity":1,"message":"187","line":13,"column":8,"nodeType":"179","messageId":"180","endLine":13,"endColumn":17},{"ruleId":"177","severity":1,"message":"188","line":21,"column":8,"nodeType":"179","messageId":"180","endLine":21,"endColumn":16},{"ruleId":"177","severity":1,"message":"189","line":27,"column":10,"nodeType":"179","messageId":"180","endLine":27,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":133,"column":15,"nodeType":"192","endLine":133,"endColumn":71},{"ruleId":"177","severity":1,"message":"193","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":21},{"ruleId":"177","severity":1,"message":"194","line":13,"column":8,"nodeType":"179","messageId":"180","endLine":13,"endColumn":17},{"ruleId":"177","severity":1,"message":"183","line":14,"column":8,"nodeType":"179","messageId":"180","endLine":14,"endColumn":17},{"ruleId":"177","severity":1,"message":"195","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":16},{"ruleId":"177","severity":1,"message":"185","line":124,"column":16,"nodeType":"179","messageId":"180","endLine":124,"endColumn":22},{"ruleId":"177","severity":1,"message":"196","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":12},{"ruleId":"177","severity":1,"message":"197","line":18,"column":13,"nodeType":"179","messageId":"180","endLine":18,"endColumn":30},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","Unexpected default export of anonymous function","Assign arrow function to a variable before exporting as module default","'TextField' is defined but never used.","'SearchBar' is defined but never used.","'errors' is assigned a value but never used.","'Tooltip' is defined but never used.","'CardMedia' is defined but never used.","'ChatIcon' is defined but never used.","'red' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'clearErrors' is defined but never used.","'InputBase' is defined but never used.","'yellow' is defined but never used.","'Grid' is defined but never used.","'recentListsMarkup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]