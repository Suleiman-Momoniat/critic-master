[{"/Users/suli/Desktop/critic-master/critic-client/src/index.js":"1","/Users/suli/Desktop/critic-master/critic-client/src/App.js":"2","/Users/suli/Desktop/critic-master/critic-client/src/reportWebVitals.js":"3","/Users/suli/Desktop/critic-master/critic-client/src/util/theme.js":"4","/Users/suli/Desktop/critic-master/critic-client/src/components/Navbar.js":"5","/Users/suli/Desktop/critic-master/critic-client/src/pages/home.js":"6","/Users/suli/Desktop/critic-master/critic-client/src/util/AuthRoute.js":"7","/Users/suli/Desktop/critic-master/critic-client/src/redux/store.js":"8","/Users/suli/Desktop/critic-master/critic-client/src/pages/signup.js":"9","/Users/suli/Desktop/critic-master/critic-client/src/pages/login.js":"10","/Users/suli/Desktop/critic-master/critic-client/src/components/List.js":"11","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/uiReducer.js":"12","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/userReducer.js":"13","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/dataReducer.js":"14","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js":"15","/Users/suli/Desktop/critic-master/critic-client/src/redux/types.js":"16","/Users/suli/Desktop/critic-master/critic-client/src/components/Profile.js":"17","/Users/suli/Desktop/critic-master/critic-client/src/components/EditDetails.js":"18","/Users/suli/Desktop/critic-master/critic-client/src/util/MyButton.js":"19","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/dataActions.js":"20","/Users/suli/Desktop/critic-master/critic-client/src/components/DeleteList.js":"21","/Users/suli/Desktop/critic-master/critic-client/src/components/PostList.js":"22"},{"size":478,"mtime":1628144683906,"results":"23","hashOfConfig":"24"},{"size":2041,"mtime":1628706396725,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1628144016176,"results":"26","hashOfConfig":"24"},{"size":2041,"mtime":1629044528921,"results":"27","hashOfConfig":"24"},{"size":2003,"mtime":1629224165670,"results":"28","hashOfConfig":"24"},{"size":1134,"mtime":1629142763177,"results":"29","hashOfConfig":"24"},{"size":608,"mtime":1628706562223,"results":"30","hashOfConfig":"24"},{"size":739,"mtime":1628266576817,"results":"31","hashOfConfig":"24"},{"size":5746,"mtime":1628706578022,"results":"32","hashOfConfig":"24"},{"size":4589,"mtime":1628337705512,"results":"33","hashOfConfig":"24"},{"size":9345,"mtime":1629225838314,"results":"34","hashOfConfig":"24"},{"size":631,"mtime":1628335232528,"results":"35","hashOfConfig":"24"},{"size":1223,"mtime":1629196176994,"results":"36","hashOfConfig":"24"},{"size":1276,"mtime":1629223689562,"results":"37","hashOfConfig":"24"},{"size":2269,"mtime":1629134250313,"results":"38","hashOfConfig":"24"},{"size":659,"mtime":1629222399493,"results":"39","hashOfConfig":"24"},{"size":5955,"mtime":1629139572126,"results":"40","hashOfConfig":"24"},{"size":4747,"mtime":1629139754980,"results":"41","hashOfConfig":"24"},{"size":388,"mtime":1629139802965,"results":"42","hashOfConfig":"24"},{"size":1852,"mtime":1629298015173,"results":"43","hashOfConfig":"24"},{"size":2363,"mtime":1629225071099,"results":"44","hashOfConfig":"24"},{"size":9377,"mtime":1629298237870,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1gguv7k",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/suli/Desktop/critic-master/critic-client/src/index.js",[],["100","101"],"/Users/suli/Desktop/critic-master/critic-client/src/App.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/reportWebVitals.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/theme.js",["102"],"export default {\n    palette: {\n      primary: {\n        light: '#33c9dc',\n        main:'#00bcd4',\n        dark:'#008394',\n        contrastText:'#fff'\n      },\n      secondary: {\n        light: '#ff6333',\n        main:'#ff3d00',\n        dark:'#b22a00',\n        contrastText:'#fff'\n      }\n    },\n    typography: {\n      useNextVariants: true,\n    }, \n\n      spreadThis: {form: {\n        textAlign: 'center'\n      },\n      image: {\n        margin: '20px auto 20px auto'\n      },\n      pageTitle: {\n        margin: '10px auto 10px auto'\n      },\n      textField: {\n        margin: '10px auto 10px auto'\n      },\n      button: {\n        marginTop: 20,\n        position: 'relative'\n      },\n      customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n      },\n      progress: {\n        position: 'absolute'\n      },\n      invisibleSeparator: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSeparator: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        marginBottom: 20\n      },\n      paper: {\n        padding: 20\n      },\n      profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: '#00bcd4'\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      }\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/components/Navbar.js",["103"],"import React, { Component, Fragment } from 'react'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes  from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport PostList from './PostList';\n\n// Material UI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Tooltip } from '@material-ui/core';\n\n//Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport Notifications from '@material-ui/icons/Notifications';\n\n\n\nclass Navbar extends Component {\n    render() {\n        const {authenticated} = this.props;\n        return (\n            <AppBar>\n                <Toolbar className=\"nav-container\">\n                    {authenticated ? \n                    (\n                        <Fragment>\n                            <PostList />\n                            <Link to='/'>\n                                <MyButton tip=\"Home\">\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>\n                            <MyButton tip=\"Notifications\">\n                                <Notifications/>\n                            </MyButton>\n                        </Fragment>\n                    )\n                    :\n                    (\n                        <Fragment>\n                        <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/\" >Home</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\n                        </Fragment>\n\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","/Users/suli/Desktop/critic-master/critic-client/src/pages/home.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/util/AuthRoute.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/store.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/pages/signup.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/pages/login.js",["104"],"import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n//MUI stuff\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport  CircularProgress  from '@material-ui/core/CircularProgress';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport {loginUser} from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\n\n\nclass login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n\n            errors: {}\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if (nextProps.UI.errors){\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history);\n        \n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        const {classes, UI: {loading}} = this.props;\n        const {errors} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm> \n                    <img src={AppIcon} alt=\"Icon\" height='50' width='50' className={classes.image}/>\n                    <Typography\n                    variant=\"h2\" \n                    className={classes.pageTitle}>\n                        Login\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        helperText={errors.email}\n                        error= {errors.email ? true : false}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        helperText={errors.password}\n                        error= {errors.password ? true : false}\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        {errors.general && (\n                            <Typography\n                            variant=\"body2\"\n                            className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        disabled = {loading}\n                        >\n                            Login\n                            {loading && (\n                                < CircularProgress\n                                size={30}\n                                className={classes.progress}/>\n                            )}\n                        </Button>\n                        <br />\n                        <br />\n                        <small>Don't have an account? Sign up <Link to=\"/signup\">here</Link></small>\n                    </form>\n\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));\n","/Users/suli/Desktop/critic-master/critic-client/src/components/List.js",["105","106","107","108","109"],"import React, { Component } from 'react'\nimport withStyles  from '@material-ui/core/styles/withStyles'\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport DeleteList from './DeleteList';\n\n// MUI Stuff\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n//Redux\nimport {connect} from 'react-redux';\nimport {likeList, unlikeList} from '../redux/actions/dataActions';\n\n//Icons\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n// import ShareIcon from '@material-ui/icons/Share';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { color } from '@material-ui/system';\n\nconst styles = {\n    card: {\n      //position: 'relative',\n      // display: 'flex',\n      marginBottom: 20,\n      overflow: 'scroll',\n      //width: '40'\n    },\n    image:{\n        // minWidth: 100,\n        // minHeight: 100,\n        maxWidth: 100,\n        maxHeight: 100\n\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    },\n    // root: {\n    //   maxWidth: 345,\n    // },\n    listItems:{\n      display:'inline-flex',\n      overflow:'scroll',\n    },\n    media: {\n      // height: 0,\n      paddingTop: '56.25%', // 16:9\n      minHeight: 50,\n      minWidth: 100,\n      maxHeight: 60,\n      // maxWidth: 100\n    },\n    // expand: {\n    //   transform: 'rotate(0deg)',\n    //   marginLeft: 'auto',\n    //   transition: theme.transitions.create('transform', {\n    //     duration: theme.transitions.duration.shortest,\n    //   }),\n    // },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n}\n\n// const useStyles = makeStyles((theme) => ({\n//   card: {\n//     display: 'flex',\n//     marginBottom: 20,\n//     overflow: 'scroll',\n//     },\n//     image:{\n//         minWidth: 100,\n\n//     },\n//     content: {\n//         padding: 25,\n//         objectFit: 'cover'\n//     },\n//     root: {\n//       maxWidth: 345,\n//     },\n//     listItems:{\n//       display:'inline-flex',\n//       overflow:'scroll',\n//     },\n//     media: {\n//       // height: 0,\n//       paddingTop: '56.25%', // 16:9\n//       minHeight: 100,\n//       minWidth: 100\n//     },\n//     expand: {\n//       transform: 'rotate(0deg)',\n//       marginLeft: 'auto',\n//       transition: theme.transitions.create('transform', {\n//         duration: theme.transitions.duration.shortest,\n//       }),\n//     },\n//     expandOpen: {\n//       transform: 'rotate(180deg)',\n//     },\n//     avatar: {\n//       backgroundColor: red[500],\n//     },\n//   }));\n\n  class List extends Component{\n    likedList = () => {\n      if(this.props.user.likes && this.props.user.likes.find((like) => like.listId === this.props.list.listId)){\n        return true;\n      } else return false;\n    }\n\n    likeList = () => {\n      this.props.likeList(this.props.list.listId);\n    }\n\n    unlikeList = () => {\n      this.props.unlikeList(this.props.list.listId);\n    }\n    render(){\n    \n\n    dayjs.extend(relativeTime);\n    //const classes = useStyles();\n    //const [expanded, setExpanded] = React.useState(false);\n  \n    // const handleExpandClick = () => {\n    //   setExpanded(!expanded);\n    // };\n\n    \n    const {\n      classes,\n      list: {\n        movieList, \n        createdAt, \n        userImage, \n        userHandle, \n        listId, \n        likeCount, \n        commentCount\n      },\n      user: {\n        authenticated, credentials : { handle }\n      }\n  } = this.props;\n\n    const likeButton = !authenticated ? (\n      <MyButton tip=\"Like\">\n        <Link to='/login'>\n          <FavoriteBorder color=\"primary\"/>\n        </Link>\n      </MyButton>\n    ) : (\n      this.likedList() ? (\n        <MyButton tip=\"Unlike\" onClick={this.unlikeList}>\n          <FavoriteIcon color=\"primary\"/>\n        </MyButton>\n      ) : (\n        <MyButton tip=\"Like\" onClick={this.likeList}>\n          <FavoriteBorder color=\"primary\"/>\n        </MyButton>\n      )\n    );\n\n    const deleteButton = authenticated && userHandle === handle ? (\n      <DeleteList listId={listId}/>\n    ) : null\n\n    let listOfImages = [];\n    const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n    movieList.forEach((movie)=>{\n      listOfImages.push(<CardMedia\n          className={classes.media}\n          image={baseUrl + movie.imageUrl}\n          title={movie.title}\n        />);\n\n    });\n  \n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              M\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n            </IconButton>\n          }\n          title={<Typography \n                  variant=\"h5\" \n                  component={Link} \n                  to={`/users/${userHandle}`}\n                  color=\"primary\"\n                  >\n                      {userHandle}\n                  </Typography>}\n                  \n          subheader={dayjs(createdAt).fromNow()}\n        />\n        {deleteButton}\n        <div className={classes.listItems}>\n        {listOfImages}\n        </div>\n        <CardContent>\n        <Typography variant=\"body3\" color=\"textPrimary\" component=\"p\">\n            Top Movies\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to cook together with your\n            guests. Add 1 cup of frozen peas along with the mussels, if you like.\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n          </IconButton>\n          <IconButton aria-label=\"share\">\n          </IconButton>\n          {likeButton}\n          <span>{likeCount} {likeCount === 1 ? 'Like' : 'Likes'}</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color='primary'/>\n          </MyButton>\n          <span>{commentCount} Comments</span>\n        </CardActions>\n      </Card>\n    );\n    }\n  }\n\n  List.propTypes = {\n    likeList: PropTypes.func.isRequired,\n    unlikeList: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    list: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => ({\n    user: state.user\n  });\n\n  const mapActionsToProps = {\n    likeList, \n    unlikeList\n  }\n\n  export default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(List));\n\n// export class List extends Component {\n\n//     render() {\n        \n//         const { classes, \n//             list : {movieList, \n//                 createdAt, \n//                 userImage, \n//                 userHandle, \n//                 listId, \n//                 likeCount, \n//                 commentCount} \n//             } = this.props;\n        \n//         return (\n//             <Card className={classes.card}>\n//                 <CardContent className={classes.content}>\n//                     <Typography \n//                     variant=\"h5\" \n//                     component={Link} \n//                     to={`/users/${userHandle}`}\n//                     color=\"primary\"\n//                     >\n//                         {userHandle}\n//                     </Typography>\n\n//                     <Typography \n//                     variant=\"body2\" \n//                     color=\"textSecondary\"\n//                     >\n//                         {createdAt}\n//                     </Typography>\n\n                    \n//                     <CardMedia\n//                         image={userImage}\n//                         title=\"Profile Image\"\n//                         className={classes.image}\n//                         />\n\n                    \n//                     {/* <Typography variant=\"body1\">{movieList.toString()}</Typography> */}\n\n\n//                 </CardContent>\n//                 <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n// <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n// <CardMedia\n//                 image={userImage}\n//                 title=\"Profile Image\"\n//                 className={classes.image}\n//                 />\n\n//             </Card>\n//         )\n//     }\n// }\n\n// export default withStyles(useStyles)(List);\n","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/uiReducer.js",["110"],"import {\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n  } from '../types';\n  \n  const initialState = {\n    loading: false,\n    errors: null\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: action.payload\n        };\n      case CLEAR_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: null\n        };\n      case LOADING_UI:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/userReducer.js",["111"],"import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_LIST,\n    UNLIKE_LIST\n  } from '../types';\n  \n  const initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case LIKE_LIST:\n        return {\n          ...state,\n          likes: [\n            ...state.likes,\n            {\n              userHandle:state.credentials.userHandle,\n              listId: action.payload.listId\n            }\n          ]\n        }\n        case UNLIKE_LIST:\n        return {\n          ...state,\n          likes: state.likes.filter(like => like.listId !== action.payload.listId)\n        }\n      default:\n        return state;\n    }\n  }","/Users/suli/Desktop/critic-master/critic-client/src/redux/reducers/dataReducer.js",["112"],"import { \n    SET_LISTS, \n    LIKE_LIST, \n    UNLIKE_LIST, \n    LOADING_DATA, \n    DELETE_LIST,\n    POST_LIST\n} from \"../types\";\n\nconst initialState = {\n    lists: [],\n    list: {},\n    loading: false,\n};\n\nexport default function(state= initialState, action){\n    switch(action.type){\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_LISTS:\n            return {\n                ...state,\n                lists: action.payload,\n                loading: false\n            };\n        case LIKE_LIST:\n        case UNLIKE_LIST:\n            let index = state.lists.findIndex((list)=>list.listId === action.payload.listId);\n            state.lists[index] = action.payload;\n            return {\n                ...state,\n            };\n        case DELETE_LIST:\n            index = state.lists.findIndex(list => list.listId === action.payload);\n            state.lists.splice(index, 1);\n            return {\n                ...state\n            }\n        case POST_LIST:\n            return {\n                ...state,\n                lists: [\n                    action.payload,\n                    ...state.lists\n                ]\n            }\n        default: \n        return state;\n        }\n}","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/redux/types.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/Profile.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/EditDetails.js",["113"],"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\n\n//Redux stuff\nimport {connect} from 'react-redux';\nimport { editUserDetails } from '../redux/actions/userActions';\nimport { Tooltip } from '@material-ui/core';\n\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n    // ...theme\n    button: {float: \"right\"}\n})\n\nclass EditDetails extends Component {\n    state={\n        bio: '',\n        website: '',\n        location: '',\n        open: false,\n    };\n    handleOpen = () =>{\n        this.setState({\n            open: true\n        });\n        this.mapUserDetailsToState(this.props.credentials);\n    }\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    };\n    componentDidMount(){\n        const credentials = this.props;\n        this.mapUserDetailsToState(credentials);\n    };\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n    handleSubmit = () =>{\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        }\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    }\n    mapUserDetailsToState = (credentials) =>{\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.bio : '',\n            location: credentials.location ? credentials.bio : '',\n        })\n    }\n    \n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\"/>\n                </MyButton>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit your details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                            name=\"bio\"\n                            type=\"text\"\n                            label=\"Bio\"\n                            multiline\n                            rows=\"3\"\n                            placeholder=\"A short bio...\"\n                            className={classes.TextField}\n                            value={this.state.bio}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                            <TextField\n                            name=\"website\"\n                            type=\"text\"\n                            label=\"Website\"\n                            placeholder=\"Your personal/professional website\"\n                            className={classes.TextField}\n                            value={this.state.website}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                            <TextField\n                            name=\"location\"\n                            type=\"text\"\n                            label=\"Location\"\n                            placeholder=\"Where you live\"\n                            className={classes.TextField}\n                            value={this.state.location}\n                            onChange={this.handleChange}\n                            fullWidth/>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) =>({\n    credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {editUserDetails})(withStyles(styles)(EditDetails));\n","/Users/suli/Desktop/critic-master/critic-client/src/util/MyButton.js",["114"],"import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\n  <Tooltip title={tip} className={tipClassName} placement=\"bottom\">\n    <IconButton onClick={onClick} className={btnClassName}>\n      {children}\n    </IconButton>\n  </Tooltip>\n);","/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/dataActions.js",["115"],"/Users/suli/Desktop/critic-master/critic-client/src/components/DeleteList.js",[],"/Users/suli/Desktop/critic-master/critic-client/src/components/PostList.js",["116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":1,"nodeType":"123","endLine":99,"endColumn":4},{"ruleId":"124","severity":1,"message":"125","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"129","line":24,"column":10,"nodeType":"126","messageId":"127","endLine":24,"endColumn":20},{"ruleId":"124","severity":1,"message":"130","line":25,"column":8,"nodeType":"126","messageId":"127","endLine":25,"endColumn":12},{"ruleId":"124","severity":1,"message":"131","line":28,"column":8,"nodeType":"126","messageId":"127","endLine":28,"endColumn":16},{"ruleId":"124","severity":1,"message":"132","line":39,"column":10,"nodeType":"126","messageId":"127","endLine":39,"endColumn":15},{"ruleId":"124","severity":1,"message":"133","line":163,"column":9,"nodeType":"126","messageId":"127","endLine":163,"endColumn":18},{"ruleId":"121","severity":1,"message":"134","line":12,"column":3,"nodeType":"123","endLine":34,"endColumn":4},{"ruleId":"121","severity":1,"message":"134","line":18,"column":3,"nodeType":"123","endLine":57,"endColumn":4},{"ruleId":"121","severity":1,"message":"134","line":16,"column":1,"nodeType":"123","endLine":53,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":17},{"ruleId":"121","severity":1,"message":"135","line":6,"column":1,"nodeType":"123","endLine":12,"endColumn":3},{"ruleId":"124","severity":1,"message":"136","line":6,"column":5,"nodeType":"126","messageId":"127","endLine":6,"endColumn":17},{"ruleId":"124","severity":1,"message":"137","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":21},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'makeStyles' is defined but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'color' is defined but never used.","'userImage' is assigned a value but never used.","Unexpected default export of anonymous function","Assign arrow function to a variable before exporting as module default","'LOADING_USER' is defined but never used.","'DialogActions' is defined but never used.","no-global-assign","no-unsafe-negation"]