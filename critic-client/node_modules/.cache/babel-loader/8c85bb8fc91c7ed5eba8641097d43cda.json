{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED } from \"../types\";\nimport axios from 'axios';\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', userData).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/signup', newUserData).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n};\nexport const getUserData = () => dispatch => {\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', `Bearer ${token}`);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/suli/Desktop/critic-master/critic-client/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","axios","loginUser","userData","history","dispatch","type","post","then","res","setAuthorizationHeader","data","token","getUserData","push","catch","err","payload","response","signupUser","newUserData","logoutUser","localStorage","removeItem","defaults","headers","common","get","console","log","FBIdToken","setItem"],"mappings":"AAAA,SACIA,QADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,UAJJ,EAKIC,mBALJ,QAMO,UANP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;AACAE,EAAAA,KAAK,CACJM,IADD,CACM,QADN,EACgBJ,QADhB,EAEKK,IAFL,CAEUC,GAAG,IAAG;AACRC,IAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACAP,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACAM,IAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACH,GAPL,EAQKC,KARL,CAQWC,GAAG,IAAE;AACRX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET,UADD;AAELoB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFjB,KAAD,CAAR;AAIH,GAbL;AAcH,CAhBM;AAkBP,OAAO,MAAMQ,UAAU,GAAG,CAACC,WAAD,EAAchB,OAAd,KAA0BC,QAAD,IAAc;AAC7DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;AACAE,EAAAA,KAAK,CACJM,IADD,CACM,SADN,EACiBa,WADjB,EAEKZ,IAFL,CAEUC,GAAG,IAAG;AACRC,IAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACAP,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACAM,IAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACH,GAPL,EAQKC,KARL,CAQWC,GAAG,IAAE;AACRX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET,UADD;AAELoB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFjB,KAAD,CAAR;AAIH,GAbL;AAcH,CAhBM;AAkBP,OAAO,MAAMU,UAAU,GAAG,MAAOhB,QAAD,IAAc;AAC1CiB,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,SAAOtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACArB,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN;AAAP,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMa,WAAW,GAAG,MAAMR,QAAD,IAAc;AAC1CJ,EAAAA,KAAK,CAAC0B,GAAN,CAAU,OAAV,EACCnB,IADD,CACMC,GAAG,IAAG;AACRJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,QADD;AAELqB,MAAAA,OAAO,EAAER,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GAND,EAOCI,KAPD,CAOOC,GAAG,IAAIY,OAAO,CAACC,GAAR,CAAYb,GAAZ,CAPd;AAQH,CATM;;AAWP,MAAMN,sBAAsB,GAAIE,KAAD,IAAU;AACrC,QAAMkB,SAAS,GAAI,UAASlB,KAAM,EAAlC;AACAU,EAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAmC,UAASnB,KAAM,EAAlD;AACAX,EAAAA,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDI,SAAjD;AACH,CAJD","sourcesContent":["import { \n    SET_USER, \n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_UNAUTHENTICATED\n} from \"../types\";\n\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) =>(dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios\n    .post('/login', userData)\n        .then(res =>{\n            setAuthorizationHeader(res.data.token);\n            dispatch(getUserData());\n            dispatch({type: CLEAR_ERRORS});\n            history.push('/');\n        })\n        .catch(err=>{\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const signupUser = (newUserData, history) =>(dispatch) => {\n    dispatch({type: LOADING_UI});\n    axios\n    .post('/signup', newUserData)\n        .then(res =>{\n            setAuthorizationHeader(res.data.token);\n            dispatch(getUserData());\n            dispatch({type: CLEAR_ERRORS});\n            history.push('/');\n        })\n        .catch(err=>{\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({type: SET_UNAUTHENTICATED});\n}\n\nexport const getUserData = () =>(dispatch) => {\n    axios.get('/user')\n    .then(res =>{\n        dispatch({\n            type: SET_USER,\n            payload: res.data\n        })\n    })\n    .catch(err => console.log(err))\n}\n\nconst setAuthorizationHeader = (token) =>{\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', `Bearer ${token}`);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}"]},"metadata":{},"sourceType":"module"}