{"ast":null,"code":"import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_list, UNLIKE_list, MARK_NOTIFICATIONS_READ } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_list:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          listId: action.payload.listId\n        }]\n      };\n\n    case UNLIKE_LIST:\n      return { ...state,\n        likes: state.likes.filter(like => like.listId !== action.payload.listId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/suli/Desktop/critic-client/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","LIKE_list","UNLIKE_list","MARK_NOTIFICATIONS_READ","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","listId","UNLIKE_LIST","filter","like","forEach","not","read"],"mappings":"AAAA,SACIA,QADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,EAKIC,SALJ,EAMIC,WANJ,EAOIC,uBAPJ,QAQS,UART;AAUE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,iBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKN,mBAAL;AACE,aAAOK,YAAP;;AACF,SAAKP,QAAL;AACE,aAAO;AACLQ,QAAAA,aAAa,EAAE,IADV;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGL,WAAGK,MAAM,CAACE;AAHL,OAAP;;AAKF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKL,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;AACEM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MADhC;AAEEC,UAAAA,MAAM,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAFzB,SAFK;AAFF,OAAP;;AAUF,SAAKC,WAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CACJC,IAAD,IAAUA,IAAI,CAACH,MAAL,KAAgBL,MAAM,CAACE,OAAP,CAAeG,MADpC;AAFF,OAAP;;AAMF,SAAKb,uBAAL;AACEO,MAAAA,KAAK,CAACD,aAAN,CAAoBW,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,aAAO,EACL,GAAGZ;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA3CJ;AA6CD","sourcesContent":["import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_list,\n    UNLIKE_list,\n    MARK_NOTIFICATIONS_READ\n  } from '../types';\n  \n  const initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case LIKE_list:\n        return {\n          ...state,\n          likes: [\n            ...state.likes,\n            {\n              userHandle: state.credentials.handle,\n              listId: action.payload.listId\n            }\n          ]\n        };\n      case UNLIKE_LIST:\n        return {\n          ...state,\n          likes: state.likes.filter(\n            (like) => like.listId !== action.payload.listId\n          )\n        };\n      case MARK_NOTIFICATIONS_READ:\n        state.notifications.forEach((not) => (not.read = true));\n        return {\n          ...state\n        };\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}