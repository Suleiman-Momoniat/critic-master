{"ast":null,"code":"var _jsxFileName = \"/Users/suli/Desktop/critic-client/src/pages/login.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; //MUI stuff\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  typography: {\n    useNextVariants: true\n  },\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  pageTitle: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: 10\n  },\n  progress: {\n    position: 'absolute'\n  }\n});\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('/login', userData).then(res => {\n        console.log(res.data);\n        localStorage.setItem('FBIdToekn', `Bearer ${res.data.token}`);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: AppIcon,\n          alt: \"Icon\",\n          height: \"50\",\n          width: \"50\",\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.pageTitle,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            className: classes.textField,\n            helperText: errors.email,\n            error: errors.email ? true : false,\n            value: this.state.email,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            className: classes.textField,\n            helperText: errors.password,\n            error: errors.password ? true : false,\n            value: this.state.password,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.customError,\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: loading,\n            children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 30,\n              className: classes.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Don't have an account? Sign up \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(login);","map":{"version":3,"sources":["/Users/suli/Desktop/critic-client/src/pages/login.js"],"names":["React","Component","withStyles","PropTypes","AppIcon","axios","Link","Grid","Typography","TextField","Button","CircularProgress","styles","theme","typography","useNextVariants","form","textAlign","image","margin","pageTitle","textField","button","marginTop","position","customError","color","fontSize","progress","login","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","password","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { PropTypes } from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n//MUI stuff\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport  CircularProgress  from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n    typography: {\n        useNextVariants: true\n      },\n      form: {\n        textAlign: 'center'\n      },\n      image: {\n        margin: '20px auto 20px auto'\n      },\n      pageTitle: {\n        margin: '10px auto 10px auto'\n      },\n      textField: {\n        margin: '10px auto 10px auto'\n      },\n      button: {\n        marginTop: 20,\n        position: 'relative'\n      },\n      customError: {\n        color: 'red',\n        fontSize: '0.8rem',\n        marginTop: 10\n      },\n      progress: {\n        position: 'absolute'\n      }\n});\n\n\n\nclass login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            loading: false,\n            errors: {}\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        axios.post('/login', userData)\n        .then(res =>{\n            console.log(res.data);\n            localStorage.setItem('FBIdToekn', `Bearer ${res.data.token}`);\n            this.setState({loading: false});\n            this.props.history.push('/');\n        })\n        .catch(err=>{\n            this.setState({\n                errors: err.response.data,\n                loading: false \n            })\n        })\n    }\n    handleChange = (event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        const {classes} = this.props;\n        const {errors, loading} = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm> \n                    <img src={AppIcon} alt=\"Icon\" height='50' width='50' className={classes.image}/>\n                    <Typography\n                    variant=\"h2\" \n                    className={classes.pageTitle}>\n                        Login\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        helperText={errors.email}\n                        error= {errors.email ? true : false}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        <TextField \n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        helperText={errors.password}\n                        error= {errors.password ? true : false}\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        fullWidth/>\n                        {errors.general && (\n                            <Typography\n                            variant=\"body2\"\n                            className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        disabled = {loading}\n                        >\n                            Login\n                            {loading && (\n                                < CircularProgress\n                                size={30}\n                                className={classes.progress}/>\n                            )}\n                        </Button>\n                        <br />\n                        <br />\n                        <small>Don't have an account? Sign up <Link to=\"/signup\">here</Link></small>\n                    </form>\n\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(login);\n"]},"metadata":{},"sourceType":"module"}